module.exports="#define GLSLIFY 1\nvarying vec2 vUv;\nvarying vec2 vTextureUv;\n#ifdef HAS_ANGLE\nattribute float angle;\nvarying float vAngle;\n#endif\n#ifdef HAS_GROUND_MAP\nvarying vec2 vGroundUv;\n#endif\n#ifdef HAS_SURF_UV\nattribute vec2 surfUv;\nvarying vec2 vSurfUv;\n#endif\nvarying vec3 vWorldPosition;\n#ifdef HAS_DATA_MAP\nvarying vec2 vDataUv;\nuniform mat4 worldDataProjection;\nuniform mat4 worldDataView;\nuniform vec2 environmentSize;\n#endif\n#ifdef HAS_SHADOW_MAP\nvarying vec2 vShadowUv;\nvarying vec3 vShadowClipPos;\nuniform mat4 shadowProjection;\n#endif\nuniform mat3 uvTransform;\nuniform vec2 uvScale;\n\nuniform float uvRepeatScale;\n\nvoid main () {\n  vec4 worldPos = modelMatrix * vec4(position.xyz, 1.0);\n\n  #ifdef HAS_ANGLE\n  vAngle = angle;\n  #endif\n  #ifdef HAS_SURF_UV\n  vSurfUv = surfUv;\n  #endif\n\n  #ifdef HAS_SHADOW_MAP\n  // vec4 vShadowPos = shadowProjection * vec4(position.xyz, 1.0);\n  // vec2 vShadowScreen = vShadowPos.xy / vShadowPos.w;\n  // vShadowUv = vShadowScreen.xy * 0.5 + 0.5;\n\n  vec4 baseClipPos = shadowProjection * vec4(worldPos.xyz, 1.0);\n  vShadowClipPos = vec3(baseClipPos.xy, baseClipPos.w);\n  // vShadowUv = (baseClipPos.xy / baseClipPos.w) * 0.5 + 0.5;\n  #endif\n\n  #ifdef HAS_DATA_MAP\n  vec2 worldPosUV = uv;\n  worldPosUV.y = 1.0 - worldPosUV.y;\n  vec2 dataWorldPos = (worldPosUV * 2.0 - 1.0) * environmentSize / 2.0;\n  vec4 vDataUvPos4 = worldDataProjection * worldDataView * vec4(dataWorldPos.xy, 0.0, 1.0);\n  vec2 vDataScreen = vDataUvPos4.xy / vDataUvPos4.w;\n  vDataUv = vDataScreen.xy * 0.5 + 0.5;\n  #endif\n\n  vUv = uv;\n  vTextureUv = uv * uvScale * uvRepeatScale;\n  vTextureUv = (uvTransform * vec3(vTextureUv, 1.0)).xy;\n  vWorldPosition = worldPos.xyz;\n\n  gl_Position = projectionMatrix * viewMatrix * worldPos;\n\n  #ifdef HAS_GROUND_MAP\n  vGroundUv = gl_Position.xy / gl_Position.w * 0.5 + 0.5;\n  #endif\n}";