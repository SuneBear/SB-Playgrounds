/* overlays/LetterboxBarsOverlay.svelte generated by Svelte v3.31.0 */
import {
	SvelteComponent,
	add_render_callback,
	attr,
	create_bidirectional_transition,
	detach,
	element,
	init,
	insert,
	safe_not_equal,
	set_style,
	space
} from "svelte/internal";

import eases from "eases";
import { fly } from "svelte/transition";

function create_fragment(ctx) {
	let div0;
	let div0_transition;
	let t;
	let div1;
	let div1_transition;
	let current;

	return {
		c() {
			div0 = element("div");
			t = space();
			div1 = element("div");
			attr(div0, "class", "letterbox top svelte-1ui17ha");
			set_style(div0, "height", /*height*/ ctx[2] + "px");
			attr(div1, "class", "letterbox bottom svelte-1ui17ha");
			set_style(div1, "height", /*height*/ ctx[2] + "px");
		},
		m(target, anchor) {
			insert(target, div0, anchor);
			insert(target, t, anchor);
			insert(target, div1, anchor);
			current = true;
		},
		p(new_ctx, [dirty]) {
			ctx = new_ctx;

			if (!current || dirty & /*height*/ 4) {
				set_style(div0, "height", /*height*/ ctx[2] + "px");
			}

			if (!current || dirty & /*height*/ 4) {
				set_style(div1, "height", /*height*/ ctx[2] + "px");
			}
		},
		i(local) {
			if (current) return;

			add_render_callback(() => {
				if (!div0_transition) div0_transition = create_bidirectional_transition(
					div0,
					fly,
					{
						delay: /*delay*/ ctx[1],
						easing: /*easing*/ ctx[3],
						duration: /*duration*/ ctx[0],
						y: -/*height*/ ctx[2],
						opacity: 1
					},
					true
				);

				div0_transition.run(1);
			});

			add_render_callback(() => {
				if (!div1_transition) div1_transition = create_bidirectional_transition(
					div1,
					fly,
					{
						delay: /*delay*/ ctx[1],
						easing: /*easing*/ ctx[3],
						duration: /*duration*/ ctx[0],
						y: /*height*/ ctx[2],
						opacity: 1
					},
					true
				);

				div1_transition.run(1);
			});

			current = true;
		},
		o(local) {
			if (!div0_transition) div0_transition = create_bidirectional_transition(
				div0,
				fly,
				{
					delay: /*delay*/ ctx[1],
					easing: /*easing*/ ctx[3],
					duration: /*duration*/ ctx[0],
					y: -/*height*/ ctx[2],
					opacity: 1
				},
				false
			);

			div0_transition.run(0);

			if (!div1_transition) div1_transition = create_bidirectional_transition(
				div1,
				fly,
				{
					delay: /*delay*/ ctx[1],
					easing: /*easing*/ ctx[3],
					duration: /*duration*/ ctx[0],
					y: /*height*/ ctx[2],
					opacity: 1
				},
				false
			);

			div1_transition.run(0);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(div0);
			if (detaching && div0_transition) div0_transition.end();
			if (detaching) detach(t);
			if (detaching) detach(div1);
			if (detaching && div1_transition) div1_transition.end();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { duration = 1000 } = $$props;
	let { delay = 0 } = $$props;
	let { height = 12.5 } = $$props;
	let { easing = eases.quartOut } = $$props;

	$$self.$$set = $$props => {
		if ("duration" in $$props) $$invalidate(0, duration = $$props.duration);
		if ("delay" in $$props) $$invalidate(1, delay = $$props.delay);
		if ("height" in $$props) $$invalidate(2, height = $$props.height);
		if ("easing" in $$props) $$invalidate(3, easing = $$props.easing);
	};

	return [duration, delay, height, easing];
}

class LetterboxBarsOverlay extends SvelteComponent {
	constructor(options) {
		super();

		init(this, options, instance, create_fragment, safe_not_equal, {
			duration: 0,
			delay: 1,
			height: 2,
			easing: 3
		});
	}
}

export default LetterboxBarsOverlay;