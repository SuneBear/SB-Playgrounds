/* overlays/About.svelte generated by Svelte v3.31.0 */
import {
	SvelteComponent,
	add_render_callback,
	append,
	attr,
	check_outros,
	component_subscribe,
	create_component,
	create_in_transition,
	create_out_transition,
	destroy_component,
	destroy_each,
	detach,
	element,
	empty,
	group_outros,
	init,
	insert,
	listen,
	mount_component,
	noop,
	run_all,
	safe_not_equal,
	set_data,
	space,
	text,
	toggle_class,
	transition_in,
	transition_out
} from "svelte/internal";

import { createEventDispatcher } from "svelte";
import { context } from "../alec-svelte";
import { localize } from "../util/locale";
import { fadeInTransition, transition } from "../animations/transitions";
import * as Tags from "../tags";
import Image from "../components/Image.svelte";
import CloseButton from "../components/CloseButton.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[8] = list[i];
	return child_ctx;
}

function get_each_context_1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[11] = list[i];
	child_ctx[13] = i;
	return child_ctx;
}

// (166:12) {:else}
function create_else_block(ctx) {
	let each_1_anchor;
	let each_value_1 = /*credit*/ ctx[8];
	let each_blocks = [];

	for (let i = 0; i < each_value_1.length; i += 1) {
		each_blocks[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
	}

	return {
		c() {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			each_1_anchor = empty();
		},
		m(target, anchor) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(target, anchor);
			}

			insert(target, each_1_anchor, anchor);
		},
		p(ctx, dirty) {
			if (dirty & /*credits*/ 8) {
				each_value_1 = /*credit*/ ctx[8];
				let i;

				for (i = 0; i < each_value_1.length; i += 1) {
					const child_ctx = get_each_context_1(ctx, each_value_1, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block_1(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value_1.length;
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			destroy_each(each_blocks, detaching);
			if (detaching) detach(each_1_anchor);
		}
	};
}

// (164:34) 
function create_if_block_1(ctx) {
	let p;
	let raw_value = /*credit*/ ctx[8].html + "";

	return {
		c() {
			p = element("p");
			attr(p, "class", "svelte-48fouy");
			toggle_class(p, "isTitle", true);
		},
		m(target, anchor) {
			insert(target, p, anchor);
			p.innerHTML = raw_value;
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(p);
		}
	};
}

// (160:12) {#if credit === "LEAF"}
function create_if_block(ctx) {
	let div;
	let image;
	let current;

	image = new Image({
			props: { width: "100%", id: "image/ui/ico_about" }
		});

	return {
		c() {
			div = element("div");
			create_component(image.$$.fragment);
			attr(div, "class", "leaf credit-leaf svelte-48fouy");
		},
		m(target, anchor) {
			insert(target, div, anchor);
			mount_component(image, div, null);
			current = true;
		},
		p: noop,
		i(local) {
			if (current) return;
			transition_in(image.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(image.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(div);
			destroy_component(image);
		}
	};
}

// (167:14) {#each credit as line, i}
function create_each_block_1(ctx) {
	let p;
	let t_value = /*line*/ ctx[11] + "";
	let t;

	return {
		c() {
			p = element("p");
			t = text(t_value);
			attr(p, "class", "svelte-48fouy");
			toggle_class(p, "isTitle", /*i*/ ctx[13] === 0);
		},
		m(target, anchor) {
			insert(target, p, anchor);
			append(p, t);
		},
		p: noop,
		d(detaching) {
			if (detaching) detach(p);
		}
	};
}

// (158:8) {#each credits as credit}
function create_each_block(ctx) {
	let div;
	let current_block_type_index;
	let if_block;
	let t;
	let current;
	const if_block_creators = [create_if_block, create_if_block_1, create_else_block];
	const if_blocks = [];

	function select_block_type(ctx, dirty) {
		if (/*credit*/ ctx[8] === "LEAF") return 0;
		if (/*credit*/ ctx[8].html) return 1;
		return 2;
	}

	current_block_type_index = select_block_type(ctx, -1);
	if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

	return {
		c() {
			div = element("div");
			if_block.c();
			t = space();
			attr(div, "class", "credit-block svelte-48fouy");
		},
		m(target, anchor) {
			insert(target, div, anchor);
			if_blocks[current_block_type_index].m(div, null);
			append(div, t);
			current = true;
		},
		p(ctx, dirty) {
			if_block.p(ctx, dirty);
		},
		i(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},
		o(local) {
			transition_out(if_block);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(div);
			if_blocks[current_block_type_index].d();
		}
	};
}

function create_fragment(ctx) {
	let div16;
	let div15;
	let div0;
	let a0;
	let image0;
	let a0_href_value;
	let t0;
	let div1;
	let p0;
	let t1_value = /*$localize*/ ctx[0].nfbProduction + "";
	let t1;
	let t2;
	let p1;
	let t3_value = /*$localize*/ ctx[0].nfbSubcaption + "";
	let t3;
	let t4;
	let main;
	let h10;
	let div2;
	let image1;
	let t5;
	let t6_value = /*$localize*/ ctx[0].playHeader + "";
	let t6;
	let t7;
	let div4;
	let div3;
	let image2;
	let t8;
	let p2;
	let strong0;
	let t9_value = /*$localize*/ ctx[0].tapOrClickAndHold + "";
	let t9;
	let t10;
	let t11_value = /*$localize*/ ctx[0].moveCharacterText + "";
	let t11;
	let t12;
	let div6;
	let div5;
	let image3;
	let t13;
	let p3;
	let strong1;
	let t14_value = /*$localize*/ ctx[0].collectText + "";
	let t14;
	let t15;
	let t16_value = /*$localize*/ ctx[0].tokenStringText + "";
	let t16;
	let t17;
	let div8;
	let div7;
	let image4;
	let t18;
	let p4;
	let strong2;
	let t19_value = /*$localize*/ ctx[0].orientText + "";
	let t19;
	let t20;
	let t21_value = /*$localize*/ ctx[0].compassStringText + "";
	let t21;
	let t22;
	let div10;
	let div9;
	let image5;
	let t23;
	let p5;
	let strong3;
	let t24_value = /*$localize*/ ctx[0].returnText + "";
	let t24;
	let t25;
	let t26_value = /*$localize*/ ctx[0].memoriesStringText + "";
	let t26;
	let t27;
	let h11;
	let div11;
	let image6;
	let t28;
	let t29_value = /*$localize*/ ctx[0].aboutHeader + "";
	let t29;
	let t30;
	let p6;
	let strong4;
	let t31_value = /*$localize*/ ctx[0].wayfinderStrongText + "";
	let t31;
	let t32;
	let t33_value = /*$localize*/ ctx[0].wayfinderTextParagraph + "";
	let t33;
	let t34;
	let p7;
	let t35_value = /*$localize*/ ctx[0].wayfinderFurtherTextParagraph + "";
	let t35;
	let t36;
	let p8;
	let t37_value = /*$localize*/ ctx[0].moreAt + "";
	let t37;
	let t38;
	let a1;
	let t39_value = /*$localize*/ ctx[0].moreAtLinkText + "";
	let t39;
	let a1_href_value;
	let t40;
	let h12;
	let div12;
	let image7;
	let t41;
	let t42_value = /*$localize*/ ctx[0].creditsHeader + "";
	let t42;
	let t43;
	let div13;
	let t44;
	let div14;
	let image8;
	let div16_intro;
	let div16_outro;
	let t45;
	let closebutton;
	let current;
	let mounted;
	let dispose;

	image0 = new Image({
			props: { width: "100px", id: "image/svg/nfblogo" }
		});

	image1 = new Image({
			props: {
				width: "100%",
				id: "image/ui/ico_about_orange"
			}
		});

	image2 = new Image({
			props: { width: "42px", id: "image/ui/touch" }
		});

	image3 = new Image({
			props: {
				width: "42px",
				id: "image/tokens/ico_fish"
			}
		});

	image4 = new Image({
			props: { width: "46px", id: "image/ui/compass3" }
		});

	image5 = new Image({
			props: { width: "38px", id: "image/ui/tree" }
		});

	image6 = new Image({
			props: {
				width: "100%",
				id: "image/ui/ico_about_orange"
			}
		});

	image7 = new Image({
			props: {
				width: "100%",
				id: "image/ui/ico_about_orange"
			}
		});

	let each_value = /*credits*/ ctx[3];
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const out = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	image8 = new Image({
			props: { width: "100%", id: "image/ui/bird" }
		});

	closebutton = new CloseButton({ props: { delay: introDelay } });
	closebutton.$on("click", /*click_handler*/ ctx[6]);

	return {
		c() {
			div16 = element("div");
			div15 = element("div");
			div0 = element("div");
			a0 = element("a");
			create_component(image0.$$.fragment);
			t0 = space();
			div1 = element("div");
			p0 = element("p");
			t1 = text(t1_value);
			t2 = space();
			p1 = element("p");
			t3 = text(t3_value);
			t4 = space();
			main = element("main");
			h10 = element("h1");
			div2 = element("div");
			create_component(image1.$$.fragment);
			t5 = space();
			t6 = text(t6_value);
			t7 = space();
			div4 = element("div");
			div3 = element("div");
			create_component(image2.$$.fragment);
			t8 = space();
			p2 = element("p");
			strong0 = element("strong");
			t9 = text(t9_value);
			t10 = space();
			t11 = text(t11_value);
			t12 = space();
			div6 = element("div");
			div5 = element("div");
			create_component(image3.$$.fragment);
			t13 = space();
			p3 = element("p");
			strong1 = element("strong");
			t14 = text(t14_value);
			t15 = space();
			t16 = text(t16_value);
			t17 = space();
			div8 = element("div");
			div7 = element("div");
			create_component(image4.$$.fragment);
			t18 = space();
			p4 = element("p");
			strong2 = element("strong");
			t19 = text(t19_value);
			t20 = space();
			t21 = text(t21_value);
			t22 = space();
			div10 = element("div");
			div9 = element("div");
			create_component(image5.$$.fragment);
			t23 = space();
			p5 = element("p");
			strong3 = element("strong");
			t24 = text(t24_value);
			t25 = space();
			t26 = text(t26_value);
			t27 = space();
			h11 = element("h1");
			div11 = element("div");
			create_component(image6.$$.fragment);
			t28 = space();
			t29 = text(t29_value);
			t30 = space();
			p6 = element("p");
			strong4 = element("strong");
			t31 = text(t31_value);
			t32 = space();
			t33 = text(t33_value);
			t34 = space();
			p7 = element("p");
			t35 = text(t35_value);
			t36 = space();
			p8 = element("p");
			t37 = text(t37_value);
			t38 = space();
			a1 = element("a");
			t39 = text(t39_value);
			t40 = space();
			h12 = element("h1");
			div12 = element("div");
			create_component(image7.$$.fragment);
			t41 = space();
			t42 = text(t42_value);
			t43 = space();
			div13 = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t44 = space();
			div14 = element("div");
			create_component(image8.$$.fragment);
			t45 = space();
			create_component(closebutton.$$.fragment);
			attr(a0, "href", a0_href_value = /*$localize*/ ctx[0].nfbInteractiveLink);
			attr(a0, "target", "_blank");
			attr(a0, "alt", "NFB-ONF");
			attr(div0, "class", "nfb-logo");
			attr(p0, "class", "nfb-production svelte-48fouy");
			attr(p1, "class", "nfb-subcaption svelte-48fouy");
			attr(div1, "class", "nfb-caption svelte-48fouy");
			attr(div2, "class", "leaf svelte-48fouy");
			attr(h10, "class", "svelte-48fouy");
			attr(div3, "class", "about-icon svelte-48fouy");
			attr(strong0, "class", "upper svelte-48fouy");
			attr(p2, "class", "left svelte-48fouy");
			attr(div4, "class", "left about-row svelte-48fouy");
			attr(div5, "class", "about-icon svelte-48fouy");
			attr(strong1, "class", "svelte-48fouy");
			attr(p3, "class", "left svelte-48fouy");
			attr(div6, "class", "left about-row svelte-48fouy");
			attr(div7, "class", "about-icon svelte-48fouy");
			attr(strong2, "class", "svelte-48fouy");
			attr(p4, "class", "left svelte-48fouy");
			attr(div8, "class", "left about-row svelte-48fouy");
			attr(div9, "class", "about-icon left-push svelte-48fouy");
			attr(strong3, "class", "svelte-48fouy");
			attr(p5, "class", "left svelte-48fouy");
			attr(div10, "class", "left about-row svelte-48fouy");
			attr(div11, "class", "leaf svelte-48fouy");
			attr(h11, "class", "svelte-48fouy");
			attr(strong4, "class", "svelte-48fouy");
			attr(p6, "class", "left svelte-48fouy");
			attr(p7, "class", "left svelte-48fouy");
			attr(a1, "target", "_blank");
			attr(a1, "href", a1_href_value = /*$localize*/ ctx[0].moreAtLink);
			attr(a1, "class", "svelte-48fouy");
			attr(p8, "class", "svelte-48fouy");
			attr(div12, "class", "leaf svelte-48fouy");
			attr(h12, "class", "svelte-48fouy");
			attr(div13, "class", "credits-list svelte-48fouy");
			attr(div14, "class", "bird svelte-48fouy");
			attr(main, "class", "copy svelte-48fouy");
			attr(div15, "class", "about-content svelte-48fouy");
			attr(div16, "class", "about-container svelte-48fouy");
		},
		m(target, anchor) {
			insert(target, div16, anchor);
			append(div16, div15);
			append(div15, div0);
			append(div0, a0);
			mount_component(image0, a0, null);
			append(div15, t0);
			append(div15, div1);
			append(div1, p0);
			append(p0, t1);
			append(div1, t2);
			append(div1, p1);
			append(p1, t3);
			append(div15, t4);
			append(div15, main);
			append(main, h10);
			append(h10, div2);
			mount_component(image1, div2, null);
			append(h10, t5);
			append(h10, t6);
			append(main, t7);
			append(main, div4);
			append(div4, div3);
			mount_component(image2, div3, null);
			append(div4, t8);
			append(div4, p2);
			append(p2, strong0);
			append(strong0, t9);
			append(p2, t10);
			append(p2, t11);
			append(main, t12);
			append(main, div6);
			append(div6, div5);
			mount_component(image3, div5, null);
			append(div6, t13);
			append(div6, p3);
			append(p3, strong1);
			append(strong1, t14);
			append(p3, t15);
			append(p3, t16);
			append(main, t17);
			append(main, div8);
			append(div8, div7);
			mount_component(image4, div7, null);
			append(div8, t18);
			append(div8, p4);
			append(p4, strong2);
			append(strong2, t19);
			append(p4, t20);
			append(p4, t21);
			append(main, t22);
			append(main, div10);
			append(div10, div9);
			mount_component(image5, div9, null);
			append(div10, t23);
			append(div10, p5);
			append(p5, strong3);
			append(strong3, t24);
			append(p5, t25);
			append(p5, t26);
			append(main, t27);
			append(main, h11);
			append(h11, div11);
			mount_component(image6, div11, null);
			append(h11, t28);
			append(h11, t29);
			append(main, t30);
			append(main, p6);
			append(p6, strong4);
			append(strong4, t31);
			append(p6, t32);
			append(p6, t33);
			append(main, t34);
			append(main, p7);
			append(p7, t35);
			append(main, t36);
			append(main, p8);
			append(p8, t37);
			append(p8, t38);
			append(p8, a1);
			append(a1, t39);
			append(main, t40);
			append(main, h12);
			append(h12, div12);
			mount_component(image7, div12, null);
			append(h12, t41);
			append(h12, t42);
			append(main, t43);
			append(main, div13);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div13, null);
			}

			append(main, t44);
			append(main, div14);
			mount_component(image8, div14, null);
			insert(target, t45, anchor);
			mount_component(closebutton, target, anchor);
			current = true;

			if (!mounted) {
				dispose = [
					listen(div16, "introend", /*introend_handler*/ ctx[4]),
					listen(div16, "outrostart", /*outrostart_handler*/ ctx[5])
				];

				mounted = true;
			}
		},
		p(new_ctx, [dirty]) {
			ctx = new_ctx;

			if (!current || dirty & /*$localize*/ 1 && a0_href_value !== (a0_href_value = /*$localize*/ ctx[0].nfbInteractiveLink)) {
				attr(a0, "href", a0_href_value);
			}

			if ((!current || dirty & /*$localize*/ 1) && t1_value !== (t1_value = /*$localize*/ ctx[0].nfbProduction + "")) set_data(t1, t1_value);
			if ((!current || dirty & /*$localize*/ 1) && t3_value !== (t3_value = /*$localize*/ ctx[0].nfbSubcaption + "")) set_data(t3, t3_value);
			if ((!current || dirty & /*$localize*/ 1) && t6_value !== (t6_value = /*$localize*/ ctx[0].playHeader + "")) set_data(t6, t6_value);
			if ((!current || dirty & /*$localize*/ 1) && t9_value !== (t9_value = /*$localize*/ ctx[0].tapOrClickAndHold + "")) set_data(t9, t9_value);
			if ((!current || dirty & /*$localize*/ 1) && t11_value !== (t11_value = /*$localize*/ ctx[0].moveCharacterText + "")) set_data(t11, t11_value);
			if ((!current || dirty & /*$localize*/ 1) && t14_value !== (t14_value = /*$localize*/ ctx[0].collectText + "")) set_data(t14, t14_value);
			if ((!current || dirty & /*$localize*/ 1) && t16_value !== (t16_value = /*$localize*/ ctx[0].tokenStringText + "")) set_data(t16, t16_value);
			if ((!current || dirty & /*$localize*/ 1) && t19_value !== (t19_value = /*$localize*/ ctx[0].orientText + "")) set_data(t19, t19_value);
			if ((!current || dirty & /*$localize*/ 1) && t21_value !== (t21_value = /*$localize*/ ctx[0].compassStringText + "")) set_data(t21, t21_value);
			if ((!current || dirty & /*$localize*/ 1) && t24_value !== (t24_value = /*$localize*/ ctx[0].returnText + "")) set_data(t24, t24_value);
			if ((!current || dirty & /*$localize*/ 1) && t26_value !== (t26_value = /*$localize*/ ctx[0].memoriesStringText + "")) set_data(t26, t26_value);
			if ((!current || dirty & /*$localize*/ 1) && t29_value !== (t29_value = /*$localize*/ ctx[0].aboutHeader + "")) set_data(t29, t29_value);
			if ((!current || dirty & /*$localize*/ 1) && t31_value !== (t31_value = /*$localize*/ ctx[0].wayfinderStrongText + "")) set_data(t31, t31_value);
			if ((!current || dirty & /*$localize*/ 1) && t33_value !== (t33_value = /*$localize*/ ctx[0].wayfinderTextParagraph + "")) set_data(t33, t33_value);
			if ((!current || dirty & /*$localize*/ 1) && t35_value !== (t35_value = /*$localize*/ ctx[0].wayfinderFurtherTextParagraph + "")) set_data(t35, t35_value);
			if ((!current || dirty & /*$localize*/ 1) && t37_value !== (t37_value = /*$localize*/ ctx[0].moreAt + "")) set_data(t37, t37_value);
			if ((!current || dirty & /*$localize*/ 1) && t39_value !== (t39_value = /*$localize*/ ctx[0].moreAtLinkText + "")) set_data(t39, t39_value);

			if (!current || dirty & /*$localize*/ 1 && a1_href_value !== (a1_href_value = /*$localize*/ ctx[0].moreAtLink)) {
				attr(a1, "href", a1_href_value);
			}

			if ((!current || dirty & /*$localize*/ 1) && t42_value !== (t42_value = /*$localize*/ ctx[0].creditsHeader + "")) set_data(t42, t42_value);

			if (dirty & /*credits*/ 8) {
				each_value = /*credits*/ ctx[3];
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(div13, null);
					}
				}

				group_outros();

				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				check_outros();
			}
		},
		i(local) {
			if (current) return;
			transition_in(image0.$$.fragment, local);
			transition_in(image1.$$.fragment, local);
			transition_in(image2.$$.fragment, local);
			transition_in(image3.$$.fragment, local);
			transition_in(image4.$$.fragment, local);
			transition_in(image5.$$.fragment, local);
			transition_in(image6.$$.fragment, local);
			transition_in(image7.$$.fragment, local);

			for (let i = 0; i < each_value.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			transition_in(image8.$$.fragment, local);

			add_render_callback(() => {
				if (div16_outro) div16_outro.end(1);
				if (!div16_intro) div16_intro = create_in_transition(div16, fadeInTransition, { y: 0, delay: 10, duration: introDelay });
				div16_intro.start();
			});

			transition_in(closebutton.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(image0.$$.fragment, local);
			transition_out(image1.$$.fragment, local);
			transition_out(image2.$$.fragment, local);
			transition_out(image3.$$.fragment, local);
			transition_out(image4.$$.fragment, local);
			transition_out(image5.$$.fragment, local);
			transition_out(image6.$$.fragment, local);
			transition_out(image7.$$.fragment, local);
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			transition_out(image8.$$.fragment, local);
			if (div16_intro) div16_intro.invalidate();
			div16_outro = create_out_transition(div16, fadeInTransition, { y: 0, delay: 0, duration: introDelay });
			transition_out(closebutton.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(div16);
			destroy_component(image0);
			destroy_component(image1);
			destroy_component(image2);
			destroy_component(image3);
			destroy_component(image4);
			destroy_component(image5);
			destroy_component(image6);
			destroy_component(image7);
			destroy_each(each_blocks, detaching);
			destroy_component(image8);
			if (detaching && div16_outro) div16_outro.end();
			if (detaching) detach(t45);
			destroy_component(closebutton, detaching);
			mounted = false;
			run_all(dispose);
		}
	};
}

const introDelay = 250;

function instance($$self, $$props, $$invalidate) {
	let $localize;
	component_subscribe($$self, localize, $$value => $$invalidate(0, $localize = $$value));

	const tapClickText = (/(iOS|Android|iPhone|iPad)/i).test(navigator.userAgent)
	? "Tap"
	: "Click";

	const dispatch = createEventDispatcher();
	const { world } = context();

	const credits = [
		[$localize.mattRole, "Matt DesLauriers"],
		[$localize.guillaumeRole, "Guillaume Le Roux"],
		["Illustration", "Tiffany Beucher"],
		[$localize.cedrineRole, "Cédrine Pradier"],
		[$localize.williamRole, "William Mapan"],
		[$localize.boombox, "Drew Thomas & S. Quinn Hoodless — BoomBox Sound"],
		[$localize.jelaniRole, "Jelani Thompson"],
		"LEAF",
		[$localize.nicholasRole, "Nicholas Klassen"],
		[$localize.robRole, "Rob McLaughlin"],
		[$localize.jasmineRole, "Jasmine Pullukatt"],
		[$localize.camilleJanineRole, "Camille Fillion", "Janine Steele"],
		[$localize.victoriaRole, "Victoria Angell"],
		[$localize.tammyRole, "Tammy Peddle"],
		[$localize.jenniferRole, "Jennifer Mair"],
		[$localize.ericRole, "Éric Bondo"],
		[$localize.sergiuRole, "Sergiu Raul Suciu"],
		[$localize.catherineRole, "Catherine Perreault"],
		[$localize.christianRole, "Christian Pitchen"],
		[$localize.socialRole, "Hannah Martin"],
		[$localize.gabrielleRole, "Gabrielle Lisa Collard"]
	]; // { html: $localize.harshitRole },

	const introend_handler = () => {
		world.findTag(Tags.AppState).running = false;
	};

	const outrostart_handler = () => {
		world.findTag(Tags.AppState).running = true;
	};

	const click_handler = () => dispatch("close");

	return [
		$localize,
		dispatch,
		world,
		credits,
		introend_handler,
		outrostart_handler,
		click_handler
	];
}

class About extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default About;