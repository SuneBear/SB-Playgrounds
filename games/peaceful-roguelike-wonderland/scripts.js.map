{"version":3,"sources":["../../../src/games/peaceful-roguelike-wonderland/scripts.js"],"names":[],"mappings":"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","file":"scripts.js","sourcesContent":["void function () {\n\n/**\n * Peaceful Roguelike Wonderland\n *\n * @Project URL: https://github.com/SuneBear/SB-Playgrounds/tree/master/src/games/peaceful-roguelike-wonderland\n *\n * @Dependences:\n *  - Grid\n *  |-- Heap.js - A binary heap implementation in CoffeeScript/JavaScript. Ported from Python's heapq module\n *  |-- PathFinding.js - A comprehensive path-finding library for grid based games\n *  - View\n *  |-- CSJS - Write modular, scoped CSS with valid JavaScript\n *  |-- Classnames - A simple javascript utility for conditionally joining classNames together\n *  |-- Maquette - Pure and simple virtual DOM library\n *  - Sound\n *  |-- Howler.js - Javascript audio library for the modern web\n *\n * @Code Overview:\n *  - Constants\n *  - Utils\n *  |-- Compose\n *  |-- Capitalize\n *  |-- Keymap\n *  |-- Random Integer\n *  |-- Random Choice\n *  |-- Shuffle\n *  |-- Simulate Keypress\n *  |-- Throttle\n *  - Roguelike\n *  |-- Direction\n *  |-- Point\n *  |-- Grid Generators\n *  |--|-- Grid Cell\n *  |--|-- Base Grid\n *  |--|-- Roguelike Grid\n *  |--|-- Maze Grid\n *  |-- Path Finders (Dependence on PathFinding.js)\n *  |--|-- Diagonal Movement\n *  |--|-- Heuristic\n *  |--|-- Base Finder\n *  |--|-- AStar Finder (Dependence on Heap.js)\n *  - Data Layer: Redux-like Pattern\n *  |-- Action Creators\n *  |-- Reducers\n *  |-- Middlewares\n *  |-- Store Core\n *  - View Component Layer\n *  |-- Library & Engine\n *  |--|-- Keyboard Listener\n *  |--|-- Sound Manager (Dependence on Howler.js)\n *  |--|-- Absolute Layout\n *  |--|-- Hero-Focused Camera\n *  |-- Mixin: Currently just a sorted feature without interfering, please improve me...\n *  |--|-- Mixin with Component (Deprecated)\n *  |--|-- VNode Mixin (Dependence on Maquette)\n *  |--|-- Style Mixin (Dependence on CSJS & Classnames)\n *  |-- View\n *  |--|-- Base View\n *  |--|-- Bottom Views: UI, High Order\n *  |--|-- Top Views: Render Layer, Singleton\n *  |-- Game Main\n *  - Init\n *\n * @List of Abbrs. of the View Component:\n *  - h: HyperScript implemented by Maquette\n *  - hc: Include a view component in HyperScript\n *  - s: Object of CSJS styles\n *  - sv: Object of shared style variables\n *  - sc: classNames util\n */\n\n/* == Constants == */\nconst GAME_NAME = 'Peaceful Roguelike Wonderland'\nconst FEEDBACK_URL = 'https://github.com/SuneBear/SB-Playgrounds/issues/new'\nconst NOOP = () => {}\n\n/* == Utils == */\n\nconst utils = {}\n\n// Compose - FP high order function\nutils.compose = (...fns) => arg => {\n  return fns.reduceRight((composed, fn) => fn(composed), arg)\n}\n\n// Capitalize\nutils.capitalize = str => {\n  return str && str[0].toUpperCase() + str.slice(1)\n}\n\n// Keymap - keyCode <=> keyName\nutils.keymap = (() => {\n  // Incomplete keyCodes map\n  const keyCodesMap = {\n    13: 'enter',\n    27: 'escape',\n    32: 'spacebar',\n    37: 'leftArrow',\n    38: 'upArrow',\n    39: 'rightArrow',\n    40: 'downArrow',\n    46: 'delete'\n  }\n\n  // Append numbers\n  for (let i = 48; i < 58; i++) keyCodesMap[i] = i - 48\n\n  // Append low case alphabets\n  for (let i = 97; i < 123; i++) keyCodesMap[i - 32] = String.fromCharCode(i)\n\n  // Append function keys\n  for (let i = 1; i < 13; i++) keyCodesMap[i + 111] = 'f' + i\n\n  const swappedKeyCodesMap = Object.keys(keyCodesMap).reduce((obj, key) => {\n    obj[keyCodesMap[key]] = parseInt(key)\n    return obj\n  }, {})\n\n  return (arg) => typeof arg === 'number' ? keyCodesMap[arg] : swappedKeyCodesMap[arg]\n})()\n\n// Random Integer\nutils.randomInteger = (min = 0, max = 1, omits = []) => {\n  const number = Math.floor(Math.random() * (max - min + 1) + min)\n  return omits.indexOf(number) === -1 ? number : utils.randomInteger(...arguments)\n}\n\n// Random Choice\nutils.randomChoice = array => {\n  const randIndex = Math.floor(Math.random() * array.length)\n  return array[randIndex]\n}\n\n// Shuffle - the Fisher-Yates (aka Knuth) shuffle\n// @REF: http://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\nutils.shuffle = array => {\n  let currentIndex = array.length\n  let randomIndex, temporaryValue\n\n  // While there remain elements to shuffle...\n  while (currentIndex !== 0) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex)\n    currentIndex -= 1\n\n    // And swap it with the current element\n    temporaryValue = array[currentIndex]\n    array[currentIndex] = array[randomIndex]\n    array[randomIndex] = temporaryValue\n  }\n\n  return array\n}\n\n// Simulate Keypress\nutils.simulateKeypress = keyName => {\n  const { keymap } = utils\n\n  // Keydown\n  const eventKeydown = new Event('keydown')\n  eventKeydown.key = keyName\n  eventKeydown.keyCode = keymap(keyName)\n  eventKeydown.which = eventKeydown.keyCode\n  window.dispatchEvent(eventKeydown)\n\n  // Keyup\n  const eventKeyup = new Event('keyup')\n  eventKeyup.key = keyName\n  eventKeyup.keyCode = keymap(keyName)\n  eventKeyup.which = eventKeyup.keyCode\n  setTimeout(() => window.dispatchEvent(eventKeyup), 0)\n}\n\n// Throttle\n// @REF: http://underscorejs.org/#throttle\nutils.throttle = (func, wait, options) => {\n  let timeout, context, args, result\n  let previous = 0\n  if (!options) options = {}\n\n  const later = function() {\n    previous = options.leading === false ? 0 : Date.now()\n    timeout = null\n    result = func.apply(context, args)\n    if (!timeout) context = args = null\n  }\n\n  const throttled = function() {\n    const now = Date.now()\n    if (!previous && options.leading === false) previous = now\n    const remaining = wait - (now - previous)\n    context = this\n    args = arguments\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout)\n        timeout = null\n      }\n      previous = now\n      result = func.apply(context, args)\n      if (!timeout) context = args = null\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining)\n    }\n    return result\n  }\n\n  throttled.cancel = function() {\n    clearTimeout(timeout)\n    previous = 0\n    timeout = context = args = null\n  }\n\n  return throttled\n}\n\n/* == Roguelike == */\n\n/* ==== Direction ==== */\nconst direction = {}\n\ndirection.orthogonal = ['N', 'E', 'S', 'W']\n\ndirection.diagonal = ['NW', 'NE', 'SE', 'SW']\n\ndirection.all = [].concat(direction.orthogonal, direction.diagonal)\n\ndirection.getCode = (dir) => {\n  switch (dir) {\n    case 'N': return 1 << 3 // 8\n    case 'E': return 1 << 2 // 4\n    case 'S': return 1 << 1 // 2\n    case 'W': return 1 << 0 // 1\n    default : return 0\n  }\n}\n\ndirection.getDX = (dir) => {\n  switch (dir) {\n    case 'N': return 0\n    case 'E': return 1\n    case 'S': return 0\n    case 'W': return -1\n  }\n}\n\ndirection.getDY = (dir) => {\n  switch (dir) {\n    case 'N': return -1\n    case 'E': return 0\n    case 'S': return 1\n    case 'W': return 0\n  }\n}\n\ndirection.getOpposite = (dir) => {\n  switch (dir) {\n    case 'N': return 'S'\n    case 'E': return 'W'\n    case 'S': return 'N'\n    case 'W': return 'E'\n\n    case 'NW': return 'SE'\n    case 'NE': return 'SW'\n    case 'SE': return 'NW'\n    case 'SW': return 'NE'\n  }\n}\n\n/* ==== Point ==== */\n\nclass Point {\n\n  static getDefaultOptions () {\n    return {\n      x: 0,\n      y: 0\n    }\n  }\n\n  constructor (options) {\n    this.options = Object.assign(Point.getDefaultOptions(), options)\n    Object.assign(this, this.options)\n  }\n\n  updateOptions (options) {\n    Object.assign(this.options, options)\n    Object.assign(this, this.options)\n  }\n\n  getPoint () {\n    return {\n      x: this.x,\n      y: this.y\n    }\n  }\n\n  isEqual (toCompare) {\n    return this.x == toCompare.x && this.y == toCompare.y\n  }\n\n}\n\n/* ==== Grid Generators ==== */\n\n/**\n * Grid Cell\n */\n\nclass GridCell extends Point {\n\n  static getDefaultOptions () {\n    return {\n      type: 'empty',\n      walkable: true,\n      // openingDirs: [],\n      // entities: [],\n      isWalked: false,\n      isSolution: false\n    }\n  }\n\n  constructor (options) {\n    super(Object.assign(GridCell.getDefaultOptions(), options))\n  }\n\n  getOpeningsCode () {\n    const { getCode } = direction\n    let code = 0\n    this.openingDirs.map(dir => code += getCode(dir))\n    return code\n  }\n\n  walk () {\n    this.updateOptions({\n      isWalked: true\n    })\n  }\n\n  correct () {\n    this.updateOptions({\n      isSolution: true\n    })\n  }\n\n  clone () {\n    return new GridCell(this.options)\n  }\n\n}\n\n/**\n * Base Grid\n */\n\nclass BaseGrid {\n\n  static getDefaultOptions () {\n    return {\n      cellOptions: {},\n      name: 'Default Grid',\n      cols: 51, // X or Width\n      rows: 51 // Y or Height\n    }\n  }\n\n  constructor (options) {\n    this.options = Object.assign({}, BaseGrid.getDefaultOptions(), options)\n\n    const { cols, rows, cellOptions} = this.options\n\n    // Core Data\n    this.total = cols * rows\n    this.matrix = this._buildMatrix(cols, rows, cellOptions)\n  }\n\n  _buildMatrix (cols, rows, cellOptions) {\n    const cellMatrix = new Array(cols)\n\n    for (let x = 0; x < cols; ++x) {\n      cellMatrix[x] = new Array(rows)\n      for (let y = 0; y < rows; ++y) {\n        cellMatrix[x][y] = new GridCell(Object.assign({ x, y }, cellOptions))\n      }\n    }\n\n    return cellMatrix\n  }\n\n  getMatrix () {\n    return this.matrix\n  }\n\n  getCellAt (x, y) {\n    if (!this.isValidCell(x, y)) return null\n\n    return this.matrix[x][y]\n  }\n\n  isWalkableAt (x, y) {\n    if (!this.isValidCell(x, y)) return false\n\n    return this.matrix[x][y].walkable\n  }\n\n  isEmptyTypeAt (x, y) {\n    if (!this.isValidCell(x, y)) return false\n\n    return this.matrix[x][y].type === 'empty'\n  }\n\n  isValidCell (x, y) {\n    const { cols, rows } = this.options\n\n    const conditions = [\n      () => x >= 0 && x < cols,\n      () => y >= 0 && y < rows\n    ]\n\n    return conditions.every(c => c())\n  }\n\n  /**\n   * Get the neighbors of the given cell\n   *\n   * @REF: https://github.com/qiao/PathFinding.js/blob/master/src/core/Grid.js#L144\n   *\n   *     offsets      diagonalOffsets\n   *  +---+---+---+    +----+---+----+\n   *  |   | N |   |    | NW |   | NE |\n   *  +---+---+---+    +----+---+----+\n   *  | W |   | E |    |    |   |    |\n   *  +---+---+---+    +----+---+----+\n   *  |   | S |   |    | SW |   | SE |\n   *  +---+---+---+    +----+---+----+\n   */\n  getNeighbors (cell, diagonalMovement, isValidAt = this.isWalkableAt.bind(this)) {\n    const { matrix } = this\n    const { x, y } = cell\n    const neighbors = []\n\n    const openingDirs = {}\n    direction.all.map(dir => openingDirs[dir] = false)\n\n    // ↑ → ↓ ←\n    direction.orthogonal.map(dir => {\n      const nx = x + direction.getDX(dir)\n      const ny = y + direction.getDY(dir)\n\n      if (isValidAt(nx, ny)) {\n        neighbors.push(matrix[nx][ny])\n        openingDirs[dir] = true\n      }\n    })\n\n    if (diagonalMovement === DiagonalMovement.Never) {\n      return neighbors\n    }\n\n    if (diagonalMovement === DiagonalMovement.OnlyWhenNoObstacles) {\n      const { N, E, S, W } = openingDirs\n\n      openingDirs.NW = N & W\n      openingDirs.NE = N & E\n      openingDirs.SE = S & E\n      openingDirs.SW = S & W\n    } else if (diagonalMovement === DiagonalMovement.IfAtMostOneObstacle) {\n      const { N, E, S, W } = openingDirs\n\n      openingDirs.NW = N || W\n      openingDirs.NE = N || E\n      openingDirs.SE = S || E\n      openingDirs.SW = S || W\n    } else if (diagonalMovement === DiagonalMovement.Always) {\n      openingDirs.NW = true\n      openingDirs.NE = true\n      openingDirs.SE = true\n      openingDirs.SW = true\n    } else {\n      throw new Error('Incorrect value of diagonalMovement')\n    }\n\n    // ↖\n    if (openingDirs.NW && isValidAt(x - 1, y - 1)) {\n      neighbors.push(matrix[x - 1][y - 1])\n    }\n    // ↗\n    if (openingDirs.NE && isValidAt(x + 1, y - 1)) {\n      neighbors.push(matrix[x + 1][y - 1])\n    }\n    // ↘\n    if (openingDirs.SE && isValidAt(x + 1, y + 1)) {\n      neighbors.push(matrix[x + 1][y + 1])\n    }\n    // ↙\n    if (openingDirs.SW && isValidAt(x - 1, y + 1)) {\n      neighbors.push(matrix[x - 1][y + 1])\n    }\n\n    return neighbors\n  }\n\n  clone () {\n    const { matrix } = this\n    const { cols, rows } = this.options\n\n    const newGrid = new this.constructor(this.options)\n    const newMatrix = new Array(cols)\n\n    for (let x = 0; x < cols; ++x) {\n      newMatrix[x] = new Array(cols)\n      for (let y = 0; y < rows; ++y) {\n        newMatrix[x][y] = matrix[x][y].clone()\n      }\n    }\n\n    newGrid.matrix = newMatrix\n\n    return newGrid\n  }\n\n}\n\n/**\n * Roguelike Grid\n *\n * @TODO: Generate a roguelike grid\n */\n\nclass RoguelikeGrid extends BaseGrid {\n\n  static getDefaultOptions () {\n    return {\n\n    }\n  }\n\n  constructor (options) {\n    super(Object.assign(RoguelikeGrid.getDefaultOptions(), options))\n  }\n\n}\n\n/**\n * Maze Grid\n */\n\nclass MazeGrid extends BaseGrid {\n\n  static getDefaultOptions () {\n    return {\n      cellOptions: {\n        type: 'wall',\n        walkable: false\n      },\n      types: {\n        wall: {\n          walkable: false\n        },\n        road: {\n          walkable: true\n        },\n        start: {\n          walkable: true\n        },\n        end: {\n          walkable: true\n        }\n      },\n      startPoint: null,\n      endPoint: null\n    }\n  }\n\n  constructor (options) {\n    super(Object.assign(MazeGrid.getDefaultOptions(), options))\n    this._buildMazeGrid()\n  }\n\n  _buildMazeGrid () {\n    this._genStartCell()\n    this._genEndCell()\n    this._buildRoadCells()\n    this._genSolution()\n  }\n\n  /**\n   * Based on Growing Tree algorithm\n   *\n   * @REF: http://weblog.jamisbuck.org/2011/1/27/maze-generation-growing-tree-algorithm\n   * @TODO: Improve performance of the loops & move the algorithm somewhere else\n   */\n  _buildRoadCells () {\n    const { randomInteger, randomChoice } = utils\n    // const { orthogonal, getDX, getDY, getOpposite } = direction\n    const { matrix } = this\n    const { cols, rows, cellOptions } = this.options\n\n    // Create an empty list of cells & add the starting cell to it\n    let currentCell = this.getStartCell()\n    const activeCellList = []\n    activeCellList.push(currentCell)\n\n    // Loop through adding to cells list if there are unvisited neighbours to add, or remove cells if not\n    // when cell list is empty we know that the maze contains all the cells\n    while (activeCellList.length > 0) {\n      // Set the current cell to the most recently added cell in the cell list\n      let index = activeCellList.length - 1\n      currentCell = activeCellList[index]\n\n      const neighbors = this.getNeighbors(currentCell, DiagonalMovement.Never, this._isUnvisitedAt.bind(this))\n\n      if (neighbors.length) {\n        this._breakDefaultCellAndCraveRoad(currentCell)\n\n        const defaultCellNeighbors = neighbors.filter(neighbor => {\n          return neighbor.type === cellOptions.type\n        })\n\n        const hasTooManyDefaultCells = Math.round(defaultCellNeighbors.length/neighbors.length)\n\n        if (hasTooManyDefaultCells) {\n          const neighbor = randomChoice(defaultCellNeighbors)\n          this._breakDefaultCellAndCraveRoad(neighbor)\n        }\n\n        neighbors.map(neighbor => {\n          neighbor._visited = true\n          activeCellList.push(neighbor)\n        })\n\n      } else {\n        activeCellList.pop()\n      }\n\n    }\n\n  }\n\n  _breakDefaultCellAndCraveRoad (cell) {\n    const { cellOptions } = this.options\n\n    if (cell.type !== cellOptions.type) return\n\n    cell.updateOptions({\n      type: 'road',\n      walkable: true\n    })\n  }\n\n  _isUnvisitedAt (x, y) {\n    const cell = this.getCellAt(x, y)\n\n    if (!cell) return false\n\n    return !cell._visited\n  }\n\n  _genRandomPoint (omittedXs = [], omittedYs = []) {\n    const { randomInteger } = utils\n    const { cols, rows } = this.options\n\n    return {\n      x: randomInteger(0, cols - 1, omittedXs),\n      y: randomInteger(0, rows - 1, omittedYs)\n    }\n  }\n\n  _genStartCell () {\n    const { matrix } = this\n    let { startPoint } = this.options\n\n    if (!startPoint) {\n      startPoint = this._genRandomPoint()\n    }\n\n    const { x, y } = startPoint\n\n    this.startCell = matrix[x][y] = new GridCell({ x, y, type: 'start' })\n  }\n\n  _genEndCell () {\n    const { randomInteger } = utils\n    const { matrix, startCell, _genRandomPoint } = this\n    const { cols, rows } = this.options\n    let { endPoint } = this.options\n\n    if (!endPoint) {\n      endPoint = this._genRandomPoint([startCell.x], [startCell.y])\n    }\n\n    const { x, y } = endPoint\n\n    this.endCell = matrix[x][y] = new GridCell({ x, y, type: 'end' })\n  }\n\n  _genSolution () {\n    const finder = new AStarFinder()\n\n    const solution = finder.findPath(\n      this.getStartCell(),\n      this.getEndCell(),\n      this\n    )\n\n    if (!solution.length) return\n\n    this.solution = solution\n    solution.map(soln => {\n      const [x, y] = soln\n      const cell = this.getCellAt(x, y)\n      cell.correct()\n    })\n\n  }\n\n  getStartCell () {\n    return this.startCell\n  }\n\n  getEndCell () {\n    return this.endCell\n  }\n\n  getSolution () {\n    return this.solution\n  }\n\n}\n\n/* ==== Path Finders ==== */\n\n/**\n * Diagonal Movement - Grouped Constants\n */\n\nconst DiagonalMovement = {\n  Always: 1,\n  Never: 2,\n  IfAtMostOneObstacle: 3,\n  OnlyWhenNoObstacles: 4\n}\n\n/**\n * Heuristic\n */\n\nconst heuristic = {}\n\nheuristic.manhattan = (dx, dy) => {\n  return dx + dy\n}\n\nheuristic.euclidean = (dx, dy) => {\n  return Math.sqrt(dx * dx + dy * dy)\n}\n\nheuristic.octile = (dx, dy) => {\n  const F = Math.SQRT2 - 1\n  return (dx < dy) ? F * dx + dy : F * dy + dx\n}\n\n/**\n * BaseFinder\n */\n\nclass BaseFinder {\n\n  static getDefaultOptions () {\n    return {\n      diagonalMovement: DiagonalMovement.Never, // Allowed diagonal movement\n      heuristic: heuristic.manhattan // Heuristic function to estimate the distance\n    }\n  }\n\n  constructor (options) {\n    this.options = Object.assign({}, BaseFinder.getDefaultOptions(), options)\n  }\n\n  findPath (startPoint, endPoint, grid) {\n    throw new Error('Not implemented')\n  }\n\n}\n\n/**\n * AStar Finder\n */\n\nclass AStarFinder extends BaseFinder {\n\n  getDefaultOptions () {\n    return {\n      weight: 1 // Weight to apply to the heuristic to allow for suboptimal paths, in order to speed up the search.\n    }\n  }\n\n  constructor (options) {\n    super(options)\n    Object.assign(this.options, AStarFinder.getDefaultOptions(), options)\n\n    const { diagonalMovement } = this.options\n\n    if (diagonalMovement === DiagonalMovement.Never) {\n      this.options.heuristic = heuristic.octile\n    }\n  }\n\n  _backtrack (node) {\n    const path = [[node.x, node.y]]\n    while (node.parent) {\n      node = node.parent\n      path.push([node.x, node.y])\n    }\n    return path.reverse()\n  }\n\n  findPath (startPoint, endPoint, grid) {\n    const { _backtrack } = this\n    const { heuristic, diagonalMovement, weight } = this.options\n    const startCell = grid.getCellAt(startPoint.x, startPoint.y)\n    const endCell = grid.getCellAt(endPoint.x, endPoint.y)\n    const openList = new Heap((nodeA, nodeB) => nodeA.f - nodeB.f)\n\n    // Set the `g` and `f` value of the start cell to be 0\n    startCell.g = 0\n    startCell.f = 0\n\n    // Push the start cell into the open list\n    openList.push(startCell)\n    startCell._opened = true\n\n    // While the open list is not empty\n    while (!openList.empty()) {\n      // Pop the position of cell which has the minimum `f` value.\n      const cell = openList.pop()\n      cell._closed = true\n\n      // If reached the end position, construct the path and return it\n      if (cell.x === endCell.x && cell.y === endCell.y) {\n        return _backtrack(endCell)\n      }\n\n      // Get neigbours of the current cell\n      const neighbors = grid.getNeighbors(cell, diagonalMovement)\n\n      for (let i = 0; i < neighbors.length; ++i) {\n        const neighbor = neighbors[i]\n\n        if (neighbor._closed) continue\n\n        const { x, y } = neighbor\n\n        // Get the distance between current cell and the neighbor\n        // And calculate the next g score\n        const ng = cell.g + ((x - cell.x === 0 || y - cell.y === 0) ? 1 : Math.SQRT2)\n\n        // Check if the neighbor has not been inspected yet, or\n        // can be reached with smaller cost from the current cell\n        if (!neighbor._opened || ng < neighbor.g) {\n          neighbor.g = ng\n          neighbor.h = neighbor.h || weight * heuristic(Math.abs(x - endPoint.x), Math.abs(y - endPoint.y))\n          neighbor.f = neighbor.g + neighbor.h\n          neighbor.parent = cell\n\n          if (!neighbor._opened) {\n            openList.push(neighbor)\n            neighbor._opened = true\n          } else {\n            // The neighbor can be reached with smaller cost.\n            // Since its f value has been updated, we have to\n            // update its position in the open list\n            openList.updateItem(neighbor)\n          }\n        }\n      } // End for each neighbor\n    } // End while not open list empty\n\n    // Fail to find the path\n    if (DEBUG) console.error('A* failed to find path')\n    return []\n  }\n\n}\n\n/* == Data Layer == */\n\n/* ==== Action Creators ==== */\nconst actionCreators = {}\n\n// Status\nactionCreators.startGame = () => {\n  return {\n    type: 'Status/StartGame',\n    linked: ['closePanel']\n  }\n}\n\nactionCreators.pauseGame = () => {\n  return {\n    type: 'Status/PauseGame',\n    linked: ['openPausePanel']\n  }\n}\n\nactionCreators.stopGame = () => {\n  return {\n    type: 'Status/StopGame'\n  }\n}\n\nactionCreators.winGame = () => {\n  return {\n    type: 'Status/WinGame',\n    linked: ['openWinPanel'],\n  }\n}\n\n// Display\nactionCreators.switchSenceType = (sceneType) => {\n  return { type: 'Display/SceneType', sceneType }\n}\n\nactionCreators.toggleMap = () => {\n  return { type: 'Display/ToggleMap' }\n}\n\nactionCreators.invertPageColors = () => {\n  return { type: 'Display/InvertPageColors' }\n}\n\nactionCreators.toggleSolution = () => {\n  return { type: 'Display/ToggleSolution' }\n}\n\nactionCreators.startTime = (startTime) => {\n  return { type: 'Display/StartTime', startTime }\n}\n\nactionCreators.endTime = (endTime) => {\n  return { type: 'Display/EndTime', endTime }\n}\n\nactionCreators.resizeWindow = () => {\n  return { type: 'Display/ResizeWindow' }\n}\n\n// Player\nactionCreators.playerMove = (direction) => {\n  return {\n    type: 'Player/Move',\n    meta: { sound: 'effects.move' },\n    linked: ['playerMovedSteps'],\n    direction\n  }\n}\n\nactionCreators.playerMovedSteps = () => {\n  return { type: 'Player/MovedSteps' }\n}\n\nactionCreators.playerMoveTo = (point) => {\n  return { type: 'Player/MoveTo', point }\n}\n\nactionCreators.playerPlaceIndex = (placeIndex) => {\n  return { type: 'Player/PlaceIndex', placeIndex }\n}\n\n// Places\nactionCreators.addPlace = (place) => {\n  return { type: 'Places/AddPlace', place }\n}\n\nactionCreators.updatePlace = (placeIndex, newPlace) => {\n  return { type: 'Place/Update', placeIndex, newPlace }\n}\n\nactionCreators.updatePlaceMap = (placeIndex, newPlaceMap) => {\n  return { type: 'Place/Map/Update', placeIndex, newPlaceMap }\n}\n\n// UI\nactionCreators.openStartPanel = () => {\n  return { type: 'UI/OpenStartPanel' }\n}\n\nactionCreators.openPausePanel = () => {\n  return { type: 'UI/OpenPausePanel' }\n}\n\nactionCreators.openWinPanel = () => {\n  return { type: 'UI/OpenWinPanel' }\n}\n\nactionCreators.updateModal = (modal) => {\n  return { type: 'UI/OpenModal', modal }\n}\n\nactionCreators.openKeyboardControlsModal = () => {\n  return actionCreators.updateModal('keyboardControls')\n}\n\nactionCreators.switchCurrentlySelectedAction = (actionName) => {\n  return {\n    type: 'UI/SwitchCurrentlySelectedAction',\n    meta: { sound: 'effects.hover' },\n    actionName\n  }\n}\n\nactionCreators.closePanel = () => {\n  return { type: 'UI/ClosePanel' }\n}\n\n/* ==== Reducers ==== */\nconst reducers = {}\n\nreducers.status = (state, action) => {\n  switch (action.type) {\n    case 'Status/StartGame':\n      return 'started'\n    case 'Status/PauseGame':\n      return 'paused'\n    case 'Status/StopGame':\n      return 'stopped'\n    case 'Status/WinGame':\n      return 'won'\n    default:\n      return state\n  }\n}\n\nreducers.display = (state, action) => {\n  switch (action.type) {\n    case 'Display/SceneType':\n      const { sceneType } = action\n      return Object.assign({}, state, { sceneType })\n    case 'Display/StartTime':\n      const { startTime } = action\n      return Object.assign({}, state, { startTime })\n    case 'Display/EndTime':\n      const { endTime } = action\n      return Object.assign({}, state, { endTime })\n    case 'Display/ToggleMap':\n      const map = !state.map\n      return Object.assign({}, state, { map })\n    case 'Display/InvertPageColors':\n      const invert = !state.invert\n      return Object.assign({}, state, { invert })\n    case 'Display/ToggleSolution':\n      const solution = !state.solution\n      return Object.assign({}, state, { solution })\n    default:\n      return state\n  }\n}\n\nreducers.player = (state, action) => {\n  switch (action.type) {\n    case 'Player/Move':\n      let { x, y } = state\n      const { direction } = action\n      switch (direction) {\n        case 'W':\n          x--\n          break\n        case 'E':\n          x++\n          break\n        case 'N':\n          y--\n          break\n        case 'S':\n          y++\n          break\n      }\n      return Object.assign({}, state, { direction, x, y })\n    case 'Player/MovedSteps':\n      let { movedSteps } = state\n      movedSteps++\n      return Object.assign({}, state, { movedSteps })\n    case 'Player/MoveTo':\n      const { point } = action\n      return Object.assign({}, state, { x: point.x, y: point.y })\n    case 'Player/PlaceIndex':\n      const { placeIndex } = action\n      return Object.assign({}, state, { placeIndex })\n    default:\n      return state\n  }\n}\n\n// @TODO: Split up reducer logic, flatten many-to-many relationships\nreducers.places = (state, action) => {\n  const { placeIndex } = action\n\n  switch (action.type) {\n    case 'Places/AddPlace':\n      const { place } = action\n      return state.concat([place])\n    case 'Place/Update':\n      const { newPlace } = action\n      return state.map(place => {\n        if (place.index !== placeIndex) return place\n        return Object.assign({}, place, newPlace)\n      })\n    case 'Place/Map/Update':\n      const { newPlaceMap } = action\n      return state.map(place => {\n        if (place.index !== placeIndex) return place\n        return Object.assign({}, place, { map: newPlaceMap })\n      })\n    default:\n      return state\n  }\n}\n\nreducers.ui = (state, action) => {\n  switch (action.type) {\n    case 'UI/OpenStartPanel':\n      return Object.assign({}, state, {\n        panel: 'start',\n        panelActions: ['startGame', 'openKeyboardControlsModal', 'giveFeedback'],\n        onSelectAction: 'startGame'\n      })\n    case 'UI/OpenPausePanel':\n      return Object.assign({}, state, {\n        panel: 'pause',\n        panelActions: ['startGame', 'openKeyboardControlsModal', 'stopGame'],\n        onSelectAction: 'startGame'\n      })\n    case 'UI/OpenWinPanel':\n      return Object.assign({}, state, {\n        panel: 'win',\n        panelActions: ['stopGame'],\n        onSelectAction: 'stopGame'\n      })\n    case 'UI/ClosePanel':\n      return Object.assign({}, state, {\n        panel: null\n      })\n    case 'UI/SwitchCurrentlySelectedAction':\n      return Object.assign({}, state, {\n        onSelectAction: action.actionName\n      })\n    case 'UI/OpenModal':\n      const { modal } = action\n      return Object.assign({}, state, { modal })\n    default:\n      return state\n  }\n}\n\n/* ==== Middlewares ==== */\nconst middlewares = {}\n\nmiddlewares.logger = store => next => action => {\n  if (!DEBUG) return next(action)\n\n  console.groupCollapsed(action.type)\n    console.group('Action:')\n      console.info(JSON.stringify(action, '', '\\t'))\n    console.groupEnd()\n    console.groupCollapsed('Previous State:')\n      console.info(JSON.stringify(store.getState(), '', '\\t'))\n    console.groupEnd()\n    const result = next(action)\n    console.groupCollapsed('State:')\n      console.info(JSON.stringify(store.getState(), '', '\\t'))\n    console.groupEnd()\n  console.groupEnd()\n\n  return result\n}\n\n// Run related actions after dispatching a main action\nmiddlewares.linked = store => next => action => {\n  const { linked } = action\n\n  if (!Array.isArray(linked)) {\n    return next(action)\n  }\n\n  linked.map(linkedAction => {\n    const _actionSpawn = actionCreators[linkedAction]\n    if (typeof _actionSpawn === undefined) return\n    store.dispatch(_actionSpawn())\n  })\n\n  return next(action)\n}\n\n// @REF: https://github.com/joshwcomeau/redux-sounds\nmiddlewares.soundSpawn = soundManager => store => next => action => {\n  if (typeof soundManager !== 'object' || !soundManager.isSoundManager) {\n    throw new Error('Missing sound manager')\n  }\n\n  if (!action.meta || !action.meta.sound) {\n    return next(action)\n  }\n\n  const [ soundName, spriteName ] = action.meta.sound.split('.')\n  soundManager.play(soundName, spriteName)\n\n  return next(action)\n}\n\n/* ==== Store Core ==== */\nclass Store {\n\n  static getInitialState () {\n    return {\n      page: 'game', // @MAYBE: About\n      status: 'stopped',\n      display: {\n        sceneType: 'text',\n        cameraTraceTarget: 'player',\n        invert: false,\n        map: false,\n        solution: false,\n        // Stats\n        startTime: null,\n        endTime: null\n      },\n      player: { // Global Entity\n        // Info\n        name: 'Sarah',\n        // Display\n        placeIndex: 0,\n        direction: 'S',\n        x: 0,\n        y: 0,\n        // Stats\n        movedSteps: 0\n      },\n      places: [],\n      ui: {\n        panel: 'start',\n        onSelectAction: 'startGame',\n        panelActions: ['startGame', 'openKeyboardControlsModal', 'giveFeedback'],\n        modal: null\n      }\n    }\n  }\n\n  constructor (...middlewares) {\n    this.middlewares = middlewares || []\n    this.subscribers = []\n    this.prevState = {}\n    this.state = this._reduce()\n\n    this._enableReduxDevtools()\n\n    if (middlewares.length > 0) {\n      this.dispatch = this._dispatchCombineMiddlewares()\n    }\n  }\n\n  setState (state) {\n    this.prevState = Object.assign({}, this.state)\n    this.state = state\n  }\n\n  getState () {\n    return this.state\n  }\n\n  getPrevState () {\n    return this.prevState\n  }\n\n  _reduce (state = Store.getInitialState(), action = {}) {\n    // @Hack: Reset state when stop to the game\n    if (action.type === 'Status/StopGame') {\n      return this._resetState()\n    }\n\n    // Normal reducers\n    return {\n      status: reducers.status(state.status, action),\n      display: reducers.display(state.display, action),\n      player: reducers.player(state.player, action),\n      places: reducers.places(state.places, action),\n      ui: reducers.ui(state.ui, action)\n    }\n  }\n\n  _resetState () {\n    // Create persistent settings\n    const { sceneType, invert } = this.state.display\n    const persistentDisplay = {\n      sceneType,\n      invert\n    }\n    const display = Object.assign(\n      Store.getInitialState().display,\n      persistentDisplay\n    )\n\n    return Object.assign(Store.getInitialState(), { display })\n  }\n\n  _enableReduxDevtools () {\n    this._devStore = window.devToolsExtension && window.devToolsExtension(this._reduce.bind(this))\n    if (this._devStore) {\n      this._devStore.subscribe(() => {\n        this.setState(this._devStore.getState())\n        this._notifySubscribers()\n      })\n    }\n  }\n\n  dispatch (action = {}) {\n    const reducer = this._reduce.bind(this)\n    this.setState(reducer(this.state, action))\n    this._notifySubscribers()\n    if (this._devStore) this._devStore.dispatch(action)\n    return action\n  }\n\n  _dispatchCombineMiddlewares () {\n    const dispatch = this.dispatch.bind(this)\n    // Inject store \"proxy\" into all middleware\n    const chain = this.middlewares.map(middleware => middleware(this))\n    // Init compose with store.dispatch as initial value\n    return utils.compose(...chain)(dispatch)\n  }\n\n  subscribe (fn) {\n    this.subscribers.push(fn)\n  }\n\n  _notifySubscribers () {\n    this.subscribers.map((subscriber) => {\n      subscriber(this.prevState, this.state)\n    })\n  }\n\n}\n\n/* == View Component Layer == */\n\n/* ==== Library & Engine ==== */\n\n/**\n * Keyboard Listener\n */\n\nclass KeyboardListener {\n\n  static getDefaultOptions () {\n    return {\n      isKeyRepeat: true,\n      handlePress: NOOP,\n      handleRelease: NOOP\n    }\n  }\n\n  constructor (options) {\n    this.options = Object.assign({}, KeyboardListener.getDefaultOptions(), options)\n    this.pressedKeys = {} // ASCII table\n    this.throttleds = {}\n\n    // Attach event listeners\n    window.addEventListener('keydown', e => this.handleKeydown(e))\n    window.addEventListener('keyup', e => this.handleKeyup(e))\n  }\n\n  handleKeydown (e) {\n    const { throttle } = utils\n    const { pressedKeys, throttleds } = this\n    const { isKeyRepeat, handlePress } = this.options\n    const keyCode = e.keyCode\n\n    if (!isKeyRepeat && this.isPressed(keyCode)) return\n    pressedKeys[keyCode] = true\n\n    for (let key in pressedKeys) {\n      if (!pressedKeys[key]) continue\n      if (!throttleds[key]) {\n        throttleds[key] = throttle(handlePress, 168, {\n          trailing: false\n        })\n      }\n      throttleds[key](~~key)\n    }\n  }\n\n  handleKeyup (e) {\n    const { handleRelease } = this.options\n    const keyCode = e.keyCode\n\n    this.pressedKeys[keyCode] = false\n\n    if (typeof handleRelease === 'function') {\n      handleRelease(e)\n    }\n  }\n\n  isPressed (keyCode) {\n    return this.pressedKeys[keyCode]\n  }\n\n}\n\n/**\n * Sound Manager\n */\n\nclass SoundManager {\n\n  static getDefaultOptions () {\n    return {\n      bgmURLs: ['./assets/sounds/bgm.mp3'],\n      effectsURLs: ['./assets/sounds/effects.mp3'],\n      effectsSprite: {\n        // HUD\n        hover: [0, 2000],\n        click: [3000, 2000],\n        // Controls\n        move: [15000, 2000],\n        // Status\n        success: [25000, 2000]\n      },\n      onLoadedSuccess: NOOP\n    }\n  }\n\n  constructor (options) {\n    this.options = Object.assign({}, SoundManager.getDefaultOptions(), options)\n    this.isSoundManager = true\n    this.mount()\n  }\n\n  mount () {\n    const { bgmURLs, effectsURLs } = this.options\n\n    this.types = [],\n    this._loadedTypes = []\n\n    if (bgmURLs.length) this.types.push('bgm')\n    if (effectsURLs.length) this.types.push('effects')\n\n    this.types.map(type => this.soundBuilder(type))\n  }\n\n  play (soundName, spriteName) {\n    const sound = this[soundName]\n\n    if (typeof sound === 'undefined') {\n      return console.warn(`\n        The sound '${soundName}' was requested, but SoundManager doesn't have anything registered under that name.\n      `)\n    } else if (spriteName && typeof sound._sprite[spriteName] === 'undefined') {\n      const validSprites = Object.keys(sound._sprite).join(', ');\n\n      return console.warn(`\n        The sound '${soundName}' was found, but it does not have a sprite specified for '${spriteName}'.\n        It only has access to the following sprites: ${validSprites}.\n      `)\n    }\n\n    sound.play(spriteName)\n  }\n\n  onLoaded () {\n    const { onLoadedSuccess } = this.options\n    this._loaded = false\n\n    const conditions = [\n      () => !this._loaded,\n      () => this._loadedTypes.length === this.types.length\n    ]\n\n    if (conditions.every(c => c())) {\n      this._loaded = true\n      onLoadedSuccess()\n    }\n\n  }\n\n  soundBuilder (type) {\n    if (!type) return\n\n    const options = {}\n    const sprite  = this.options[`${type}Sprite`]\n\n    options.src = this.options[`${type}URLs`]\n    options.loop = sprite ? false : true\n    options.onload = () => {\n      this._loadedTypes.push(type)\n      this.onLoaded()\n    }\n\n    if (sprite) options.sprite = sprite\n\n    this[type] = new Howl(options)\n  }\n\n}\n\n/**\n * Absolute Layout Engine\n */\n\nclass AbsoluteLayoutEngine {\n\n  static getDefaultOptions () {\n    return {\n      unit: '%',\n      unitLength: 5\n    }\n  }\n\n  constructor (options) {\n    this.options = Object.assign({}, AbsoluteLayoutEngine.getDefaultOptions(), options)\n  }\n\n  getPositionAt (x, y, isNagative) {\n    const { unit, unitLength } = this.options\n\n    let left = unitLength * x\n    let top = unitLength * y\n\n    if (isNagative) {\n      left *= -1\n      top *= -1\n    }\n\n    return {\n      left: `${left}${unit}`,\n      top: `${top}${unit}`\n    }\n  }\n\n  getPositionTransformAt (...arg) {\n    const offset = this.getPositionAt(...arg)\n\n    return {\n      transform: `translate3d(${offset.left}, ${offset.top}, 0)`\n    }\n  }\n\n}\n\n/**\n * Hero-Focused Camera\n *\n * @DESC: Camera <-> Scene Viewport <-> Scene Layer\n * @DEP: Layout Engine\n */\n\nclass HeroFocusedCamera {\n\n  static getDefaultOptions () {\n    return {\n      layoutEngine: null,\n      heroPoint: {\n        x: 0,\n        y: 0\n      },\n      totalCols: 0,\n      totalRows: 0\n    }\n  }\n\n  constructor (options) {\n    this.options = Object.assign({}, HeroFocusedCamera.getDefaultOptions(), options)\n  }\n\n  getViewportSize () {\n    const { layoutEngine } = this.options\n    const { unitLength, unit } = layoutEngine.options\n\n    if (unit === 'px') {\n      return {\n        viewportCols: window.innerWidth / unitLength,\n        viewportRows: window.innerHeight / unitLength\n      }\n    } else {\n      const aspectRatio = window.innerWidth/window.innerHeight\n      const viewportRows = 100 / unitLength\n      const viewportCols = viewportRows * aspectRatio\n      return {\n        viewportCols,\n        viewportRows\n      }\n    }\n  }\n\n  getViewportOffset () {\n    const {\n      layoutEngine, heroPoint,\n      totalCols, totalRows\n    } = this.options\n\n    const { viewportCols, viewportRows } = this.getViewportSize()\n\n    // X\n    const minX = 0\n    const maxX = totalCols - viewportCols\n    let cameraX = heroPoint.x - (viewportCols / 2)\n    cameraX = Math.min(cameraX, maxX)\n    cameraX = Math.max(cameraX, minX)\n\n    // Y\n    const minY = 0\n    const maxY = totalRows - viewportRows\n    let cameraY = heroPoint.y - (viewportRows / 2)\n    cameraY = Math.min(cameraY, maxY)\n    cameraY = Math.max(cameraY, minY)\n\n    return layoutEngine.getPositionTransformAt(cameraX, cameraY, true)\n  }\n\n  getSceneLayerSize () {\n    const { layoutEngine, totalCols, totalRows } = this.options\n    const { unitLength, unit } = layoutEngine.options\n\n    return {\n      width: `${totalCols * unitLength}${unit}`,\n      height: `${totalRows * unitLength}${unit}`\n    }\n  }\n\n}\n\n/* ==== Mixin ==== */\n\n/**\n * Mixin with Component\n *\n * @TODO: Separate some mixins into files when supporting ES6 Modules\n */\n\nconst mixinWithComponent = (...mixins) => {\n  // MixedComponent Class\n  class MixedComponent {\n\n    constructor () {\n      MixedComponent.mixinConstructors.map(\n        f => f.call(this)\n      )\n    }\n\n  }\n\n  // Static props\n  MixedComponent.mixinConstructors = []\n\n  for(let mixin of mixins) {\n    // @TODO: Would need to handle mixin collisions...\n\n    // Collect constructor of mixin\n    if (typeof mixin._constructor === 'function') {\n      MixedComponent.mixinConstructors.push(\n        mixin._constructor\n      )\n      delete mixin._constructor\n    }\n\n    // Mount functions to MixedComponent.prototype\n    for(let name of Object.keys(mixin)) {\n      MixedComponent.prototype[name] = mixin[name]\n    }\n  }\n\n  return MixedComponent\n}\n\n/**\n * VNode Mixin\n */\n\nconst vnodeMixin = Object.assign({}, window.maquette, {\n\n  _constructor: function () {\n    this._subClasses = {}\n    this._projector = this.createProjector({})\n    this.hc = this.hc.bind(this) // @FIXME: Integrate into `h`\n  },\n\n  hc: function (ComponentClass, props, children) {\n    if (typeof ComponentClass !== 'function') {\n      throw new Error('The first argument of `hc` should be a Component Class')\n    }\n\n    let component = null\n    const componentName = ComponentClass.name\n\n    if (this._subClasses[componentName]) {\n      component = this._subClasses[componentName]\n      component.updateProps(props)\n    } else {\n      component = new ComponentClass(props, children)\n      this._subClasses[componentName] = component\n    }\n\n    if (typeof component.render !== 'function') {\n      throw new Error(`No render function found in Component ${ComponentClass.name}`)\n    }\n\n    return component.render()\n  },\n\n  mount: function ($container, renderFunction = this.render.bind(this)) {\n    this._projector.append($container, renderFunction)\n  },\n\n  update: function (props) {\n    this.updateProps(props)\n    this._projector.scheduleRender()\n  },\n\n  resume: function () {\n    this._projector.resume()\n  },\n\n  stop: function () {\n    this._projector.stop()\n  }\n\n})\n\n/**\n * Style Mixin\n */\n\n// @Hack: Prevent duplicate styles\nconst _insertedCss = {}\n\nconst _styleVariables = {\n  // Colors\n  svPrimary: '#f3904e',\n  svSecond: '#a6a6a6',\n  svBackground: '#EEEEEE',\n  svMask: 'rgba(245, 245, 245, 0.8)',\n  svCard: 'rgba(255, 255, 255, 0.95)',\n\n  // ZIndex\n  svZIndexScene: 23,\n  svZIndexHud: 233,\n  svZIndexPanel: 2333,\n  svZIndexModal: 23333,\n\n  zPlaceholder: '-_-'\n}\n\nconst styleMixin = Object.assign({ csjs: window.csjs }, {\n  // @TODO: Define variables & utils\n\n  _constructor: function () {\n    if (!this.style) return\n\n    // Register global variables\n    this.sv = _styleVariables\n\n    // Get the classNames from the styles\n    const styles = this.style()\n    const _s = {}\n    Object.keys(styles).map(styleName => _s[styleName] = styles[styleName].classNames)\n\n    // Mount the styles object & the util function\n    this.s  = _s\n    this.sc = (...arg) => {\n      const classnames = this.csjs.deps.classNames(arg).split(' ')\n      const classnamesObj = {}\n      classnames.map(classname => classnamesObj[classname] = true)\n      return classnamesObj\n    }\n\n    // Inject the static string of CSS\n    const constructorName = this.constructor.name\n    if (_insertedCss[constructorName]) {\n      return null\n    } else {\n      _insertedCss[constructorName] = true\n    }\n    const staticCss = this.csjs.getCss(styles)\n    this.csjs.deps.insertCss(staticCss)\n  }\n\n})\n\n/* ==== View ==== */\n\n/**\n * Base View\n *\n * @TODO: Think of a elegent way to combine tree-based structure and decoration (mixin-based inheritance)\n * @TODO: Beyond DOM-based view, make a magic to includes style, texture, sound, event and more info mixins\n */\n\nclass BaseView extends mixinWithComponent(\n  vnodeMixin,\n  styleMixin\n) {\n\n  static getDefaultProps () {\n    return {\n      canAutoRender: false\n    }\n  }\n\n  constructor (props, children = []) {\n    super()\n\n    this.props = Object.assign({}, BaseView.getDefaultProps(), props)\n    this.children = children\n\n    if (this.props.canAutoRender) this.render()\n  }\n\n  updateProps (props) {\n    this.props = props\n  }\n\n  render () {\n    const { h, children } = this\n\n    return h('div', 'Default render function, please override me', children)\n  }\n\n  destory () {\n    // @TODO\n  }\n\n}\n\n/* ==== Bottom Views ==== */\n// @TODO: Add more common UI views\n\n/**\n * Modal View\n */\n\nclass ModalView extends BaseView {\n\n  style () {\n    const {\n      svPrimary,\n      svZIndexModal,\n      svCard\n    } = this.sv\n\n    return this.csjs`\n\n      .modalView {\n        position: fixed;\n        z-index: ${svZIndexModal};\n        display: flex;\n        justify-content: center;\n        width: 100%;\n        height: 100vh;\n      }\n\n      .modalMask {\n        position: absolute;\n        z-index: -1;\n        width: 100%;\n        height: 100vh;\n        background: rgba(245, 245, 245, 0.95);\n        cursor: pointer;\n      }\n\n      .modalDialog {\n        position: absolute;\n        display: flex;\n        flex-direction: column;\n        width: 65%;\n        max-width: 700px;\n        min-width: 300px;\n        padding: 25px;\n        margin: 10vh 0;\n        max-height: 80vh;\n        background: hsla(0, 0%, 100%, .36);\n        border: 2px solid currentColor;\n        border-radius: 4px;\n        box-shadow: 1px 2px 5px rgba(0, 0, 0, .15);\n        overflow-y: auto;\n      }\n\n      .modalHeader {\n        position: relative;\n        padding-bottom: 17px;\n        margin-top: 5px;\n        margin-bottom: 20px;\n        border-bottom: 2px solid currentColor;\n      }\n\n      .modalTitle {\n        font-size: 20px;\n      }\n\n      .modalClose {\n        position: absolute;\n        right: -2px;\n        top: 2px;\n        width: 24px;\n        height: 24px;\n        font-size: 20px;\n        cursor: pointer;\n      }\n\n      .modalClose:before, .modalClose:after {\n        content: ' ';\n        position: absolute;\n        left: 12px;\n        height: 24px;\n        width: 2px;\n        background-color: currentColor;\n        border-radius: 2px;\n      }\n\n      .modalClose:before {\n        transform: rotate(45deg);\n      }\n\n      .modalClose:after {\n        transform: rotate(-45deg);\n      }\n\n      .modalClose:hover {\n        color: ${svPrimary};\n      }\n\n      .modalBody {\n        display: flex;\n        width: 100%;\n        overflow: hidden;\n      }\n\n      .modalBody > * {\n        flex: 1;\n        overflow-y: auto;\n        padding-bottom: 5px;\n      }\n\n    `\n  }\n\n  render () {\n    const { h, s, sc, children } = this\n\n    return h('div', { classes: sc(s.modalView), key: s.modalView }, [\n      h('div', { classes: sc(s.modalDialog) }, [\n        this.renderHeader(),\n        h('div', { classes: sc(s.modalBody) }, children)\n      ]),\n      h('div', {\n        classes: sc(s.modalMask),\n        onclick: this.handleCloseClick,\n        bind: this\n      })\n    ])\n  }\n\n  renderHeader () {\n    const { h, s, sc } = this\n    const { title } = this.props\n\n    return h('div', { classes: sc(s.modalHeader) }, [\n      this.renderTitle(),\n      h('div', {\n        classes: sc(s.modalClose),\n        onclick: this.handleCloseClick,\n        bind: this\n      })\n    ])\n  }\n\n  renderTitle () {\n    const { h, s, sc } = this\n    const { title } = this.props\n\n    if (!title) {\n      return null\n    }\n\n    return h('div', { classes: sc(s.modalTitle) }, title)\n  }\n\n  handleCloseClick () {\n    const { keyboardShortcuts } = this.props\n    const { simulateKeypress } = utils\n\n    // @Hack: Simulate Keypress on click\n    const keyName = keyboardShortcuts.togglePopup.split('|')[0]\n    simulateKeypress(keyName)\n  }\n\n}\n\n/* ==== Top Views ==== */\n\n/**\n * KBC View - Keyboard Controls\n */\n\nclass KBCView extends BaseView {\n\n  style () {\n    return this.csjs`\n\n      .kbcView {\n\n      }\n\n      .shortcutItem {\n        display: flex;\n        align-items: center;\n      }\n\n      .shortcutItem + .shortcutItem {\n        margin-top: 20px;\n      }\n\n      .shortcutKey {\n        min-width: 42px;\n        height: 42px;\n        padding: 0 10px;\n        margin: 0px 4px;\n        background: #fff;\n        border-radius: 4px;\n        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.1);\n        font: 18px/42px Helvetica, serif;\n        text-transform: capitalize;\n        text-align: center;\n        color: #666;\n      }\n\n      .shortcutAction {\n        margin-left: 20px;\n        font-size: 18px;\n        text-transform: capitalize;\n      }\n\n    `\n  }\n\n  render () {\n    const { h, s, sc } = this\n    const { keyboardShortcuts } = this.props\n\n    const keyboardShortcutsMap = Object.keys(keyboardShortcuts)\n\n    return h('div', { classes: sc(s.kbcView) }, keyboardShortcutsMap.map(action => {\n      return h('div', { classes: sc(s.shortcutItem) }, [\n        h('div', { classes: sc(s.shortcutKey), innerHTML: this.formatKeyAndAction(keyboardShortcuts[action]) } ),\n        h('div', { classes: sc(s.shortcutAction), innerHTML: this.formatKeyAndAction(action) })\n      ])\n    }))\n  }\n\n  decamelize (str, sep = '-') {\n    return str\n      .replace(/([a-z\\d])([A-Z])/g, '$1' + sep + '$2')\n      .replace(/([A-Z]+)([A-Z][a-z\\d]+)/g, '$1' + sep + '$2')\n      .toLowerCase()\n  }\n\n  formatKeyAndAction (input) {\n    let output = input\n\n    const textToSymbol = {\n      leftArrow: '←',\n      rightArrow: '→',\n      upArrow: '↑',\n      downArrow: '↓'\n    }\n\n    for (let text in textToSymbol) {\n      output = output.replace(text, textToSymbol[text])\n    }\n\n    output = this\n      .decamelize(output, ' ')\n      .split('|').join(' &nbsp;/&nbsp; ')\n\n    return output\n  }\n\n}\n\n/**\n * HUD View\n */\n\nclass HUDView extends BaseView {\n\n  style () {\n    const {\n     svZIndexHud\n    } = this.sv\n\n    return this.csjs`\n\n      .hudView {\n        position: absolute;\n        z-index: ${svZIndexHud};\n      }\n\n    `\n  }\n\n  render () {\n    const { h, s, sc } = this\n\n    return h('div', { classes: sc(s.hudView) },  [\n      this.renderMap()\n    ])\n  }\n\n  renderMap () {\n    const { h } = this\n    const { display } = this.props\n\n    if (!display.map) {\n      return null\n    }\n\n    return h('div', 'Map')\n  }\n\n}\n\n/**\n * Panel View\n */\nclass PanelView extends BaseView {\n\n  style () {\n    const {\n      svPrimary,\n      svMask,\n      svZIndexPanel\n    } = this.sv\n\n    return this.csjs`\n\n      .panelWrap {\n        position: fixed;\n        z-index: ${svZIndexPanel};\n        display: flex;\n        justify-content: center;\n        z-index: 10010;\n        width: 100%;\n        height: 100vh;\n        padding-top: 20vh;\n        background: ${svMask};\n      }\n\n      .panelBody {\n        width: 80%;\n        max-width: 400px;\n        text-align: center;\n      }\n\n      .panelTitle {\n        font-size: 24px;\n        margin-bottom: 48px;\n      }\n\n      .panelList {\n        /* overflow-y: auto; */\n      }\n\n      .panelButton {\n        padding: 7px 16px;\n        border: 2px solid currentColor;\n        border-radius: 20px;\n        cursor: pointer;\n        transition: background 218ms;\n      }\n\n      .panelButton:hover,\n      .panelButton.isActive {\n        background: rgba(0, 0, 0, 0.1);\n      }\n\n      .panelButton + .panelButton {\n        margin-top: 24px;\n      }\n\n      .wonBlessings {\n        line-height: 1.6;\n        padding: 14px;\n        margin-top: -22px;\n        margin-bottom: 28px;\n        background: rgba(255, 255, 255, 0.65);\n        border-radius: 25px;\n      }\n\n      .wonBlessings em {\n        margin-right: 2px;\n        color: ${svPrimary}\n      }\n    `\n  }\n\n  render () {\n    const { status, ui } = this.props\n\n    if (!ui.panel) return null\n\n    switch (status) {\n      case 'stopped':\n        return this.renderStartPanel()\n      case 'paused':\n        return this.renderPausedPanel()\n      case 'won':\n        return this.renderWonPanel()\n      default:\n       return null\n    }\n  }\n\n  renderPanelWrap (children) {\n    const { h, s, sc } = this\n\n    return h('div', { classes: sc(s.panelWrap), key: s.panelWrap }, [\n      h('div', { classes: sc(s.panelBody) }, [\n        h('div', { classes: sc(s.panelTitle) }, GAME_NAME),\n        h('div', { classes: sc(s.panelList) }, children)\n      ])\n    ])\n  }\n\n  renderStartPanel () {\n    const { h, s, sc } = this\n    const { ui } = this.props\n    const { panelActions } = ui\n\n    const actionTexts = [\n      'Start Game',\n      'Keyboard Controls',\n      'Give Feedback'\n    ]\n\n    return this.renderPanelWrap(\n      panelActions.map((action, index) => {\n        return this.renderPanelButton(action, actionTexts[index])\n      })\n    )\n  }\n\n  renderPausedPanel () {\n    const { h, s, sc } = this\n    const { ui } = this.props\n    const { panelActions } = ui\n\n    const actionTexts = [\n      'Resume Game',\n      'Keyboard Controls',\n      'Return to Begin'\n    ]\n\n    return this.renderPanelWrap(\n      panelActions.map((action, index) => {\n        return this.renderPanelButton(action, actionTexts[index])\n      })\n    )\n  }\n\n  renderWonPanel () {\n    const { h, s, sc } = this\n    const { player, display, ui } = this.props\n    const { panelActions } = ui\n\n    const stepsTaken = player.movedSteps\n    let secondsTaken = new Date(display.endTime).getTime() - new Date(display.startTime).getTime()\n    secondsTaken = Math.ceil(secondsTaken / 1000)\n\n    const actionTexts = [\n      'Return to Begin'\n    ]\n\n    const blessings = h('div', {\n      classes: sc(s.wonBlessings),\n      innerHTML: `Congratulations! You won the game.\n        <br/>Time taken is <em>${secondsTaken}</em> seconds with <em>${stepsTaken}</em> steps.`\n    })\n\n    const bottons = panelActions.map((action, index) => {\n      return this.renderPanelButton(action, actionTexts[index])\n    })\n\n    return this.renderPanelWrap(\n      [blessings].concat(bottons)\n    )\n  }\n\n  renderPanelButton (action, text) {\n    const { h, s, sc } = this\n    const { ui } = this.props\n\n    return h('div', {\n      classes: { [s.panelButton]: true, [s.isActive]: ui.onSelectAction === action },\n      dataAction: action,\n      onmouseover: this.handlePanelButtonHover,\n      onclick: this.handlePanelButtonClick,\n      bind: this\n    }, text)\n  }\n\n  handlePanelButtonHover (e) {\n    const { dispatch } = store\n    const { switchCurrentlySelectedAction } = actionCreators\n\n    const $target = e.currentTarget\n    const actionName = $target.getAttribute('dataAction')\n\n    dispatch(switchCurrentlySelectedAction(actionName))\n  }\n\n  handlePanelButtonClick () {\n    const { keyboardShortcuts } = this.props\n    const { simulateKeypress } = utils\n\n    // @Hack: Simulate Keypress on click\n    simulateKeypress(keyboardShortcuts.select)\n  }\n\n}\n\n/**\n * Scene View\n */\nclass SceneView extends BaseView {\n\n  style () {\n    const {\n      svPrimary,\n      svZIndexScene\n    } = this.sv\n\n    const svTextCellSize = 40 // 5\n    const svTextCellUnit = 'px' // vh\n\n    this.lsv = {\n      svTextCellSize,\n      svTextCellUnit\n    }\n\n    return this.csjs`\n\n      /* Common */\n      .sceneWrap {\n        position: absolute;\n        z-index: ${svZIndexScene};\n        width: 100%;\n      }\n\n      .scene {\n        position: absolute;\n        width: 100%;\n        height: 100vh;\n        display: flex;\n        will-change: transform;\n        transition: all 618ms;\n      }\n\n      .sceneLayer {\n        position: absolute;\n        display: flex;\n        max-width: 100%;\n        max-height: 100vh;\n        margin: auto;\n        position: absolute;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n      }\n\n      .sceneLayer.sceneEntities {\n        z-index: 2;\n      }\n\n      .sceneLayer.sceneMap {\n        z-index: 1;\n        flex-direction: row;\n      }\n\n      .commonCol {\n        flex: 0 0 auto;\n        width: ${svTextCellSize}${svTextCellUnit};\n      }\n\n      .commonCell {\n        flex: 1 0 auto;\n      }\n\n      .commonEntity {\n        position: absolute;\n      }\n\n      /* Text */\n      .textScene {\n\n      }\n\n      .textCell {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: ${svTextCellSize}${svTextCellUnit};\n        height: ${svTextCellSize}${svTextCellUnit};\n      }\n\n      .textCell.typeRoad {\n        color: #cccccc;\n        transition: all 418ms 218ms;\n      }\n\n      .textCell.typeWall {\n        color: #666666; /* #a6a6a6 */\n      }\n\n      .textCell.typeStart {\n        color: currentColor !important;\n        background: #f3ece2 !important;\n      }\n\n      .textCell.typeEnd {\n        color: currentColor !important;\n        background: #e2e9f3 !important;\n      }\n\n      .textCell.isWalked {\n        color: ${svPrimary};\n      }\n\n      .textCell.isSolution {\n        background: #e9f3e2;\n      }\n\n      .textEntity.typePlayer {\n        align-items: flex-end;\n        padding: 10px;\n        background: ${svPrimary};\n        background-clip: content-box;\n        border-radius: 50%;\n        color: #ffffff;\n        opacity: 0.9;\n        will-change: transform;\n        transition: all 318ms;\n      }\n\n      /* Graphic */\n      .graphicScene {\n        align-items: center;\n        justify-content: center;\n      }\n\n    `\n  }\n\n  render () {\n    const { display } = this.props\n    const { sceneType } = display\n    const { svTextCellSize, svTextCellUnit } = this.lsv\n\n    this.layoutEngine = new AbsoluteLayoutEngine({\n      unit: svTextCellUnit,\n      unitLength: svTextCellSize\n    })\n\n    switch (sceneType) {\n      case 'text':\n        return this.renderTextScene()\n      case 'graphic':\n        return this.renderGraphicScene()\n      default:\n       return null\n    }\n  }\n\n  renderSceneWrap (children) {\n    const { h, s, sc } = this\n    const { cols, rows } = this.props.place\n\n    return h('div', { classes: sc(s.sceneWrap), key: s.sceneWrap }, children)\n  }\n\n  renderTextScene () {\n    const { h, s, sc } = this\n    const { layoutEngine } = this\n    const { unitLength, unit } = this.layoutEngine.options\n    const { map, cols, rows } = this.props.place\n\n    const heroPoint = this.getCameraTraceTarget()\n    const camera = new HeroFocusedCamera({\n      layoutEngine,\n      heroPoint,\n      totalCols: cols,\n      totalRows: rows\n    })\n\n    const viewportOffset = camera.getViewportOffset()\n    const sceneLayerSize = camera.getSceneLayerSize()\n\n    return this.renderSceneWrap([\n      h('div', { classes: sc(s.scene, s.textScene), styles: viewportOffset, key: s.textScene }, [\n        h('div', { classes: sc(s.sceneLayer, s.sceneEntities), styles: sceneLayerSize }, [\n          this.renderTextScenePlayer()\n        ]),\n        h('div', { classes: sc(s.sceneLayer, s.sceneMap), styles: sceneLayerSize, key: s.sceneMap }, map.map((col, index) => {\n          return h('div', { classes: sc(s.commonCol), key: `col-${index}` }, [\n            col.map(cell => this.renderTextCell(cell))\n          ])\n        }))\n      ])\n    ])\n  }\n\n  getCameraTraceTarget () {\n    const { display, player, place } = this.props\n    const { grid } = place\n    const { cameraTraceTarget } = display\n\n    switch (cameraTraceTarget) {\n      case 'player': return player\n      default: return grid.getCellAt(0, 0)\n    }\n  }\n\n  renderTextScenePlayer () {\n    const { h, s, sc } = this\n    const { layoutEngine } = this\n    const { status, player } = this.props\n\n    const playerOffset = layoutEngine.getPositionTransformAt(player.x, player.y)\n\n    if (status === 'stopped') {\n      return null\n    }\n\n    return h('div', {\n      classes: sc(s.textCell, s.commonEntity, s.textEntity, s.typePlayer),\n      styles: playerOffset }\n    , '@')\n  }\n\n  renderTextCell (cell) {\n    const { capitalize, randomChoice } = utils\n    const { h, s, sc } = this\n    const { display, place } = this.props\n    const { types } = place.grid.options\n\n    const wallSymbols = ['#', '■', '/', '❄', '⚑', '◎']\n\n    const roadSymbols = ['.∵', '.∵。', '。.']\n\n    const typeSymbolsMap = {\n      'start': 'S',\n      'end': 'E',\n      'wall': wallSymbols[3], // randomChoice(wallSymbols)\n      'road': roadSymbols[0] // randomChoice(roadSymbols)\n    }\n\n    const topClasses = sc(\n      s.commonCell,\n      s.textCell\n    )\n\n    // @FIXME: Break the second rule http://maquettejs.org/docs/rules.html\n    for (let type in types) {\n      topClasses[s[`type${capitalize(type)}`]] = cell.type === type\n    }\n\n    topClasses[s.isWalked] = cell.isWalked\n    topClasses[s.isSolution] = display.solution && cell.isSolution\n\n    return h('div', { classes: topClasses, key: `cell-${cell.x}-${cell.y}` },\n      typeSymbolsMap[cell.type]\n    )\n  }\n\n  renderGraphicScene () {\n    const { h, s, sc } = this\n\n    return this.renderSceneWrap([\n      h('div', {\n        classes: sc(s.scene, s.graphicScene),\n        key: s.graphicScene\n      }, 'Graphic scene is WIP, please press T to switch to text scene. (¬_¬)')\n    ])\n  }\n\n}\n\n/**\n * Game View\n */\nclass GameView extends BaseView {\n\n  style () {\n    return this.csjs `\n\n      .game {\n        position: relative;\n        background: #ffffff;\n        height: 100vh;\n        transition: all 518ms;\n      }\n\n      .game.isInvertColors {\n        -webkit-filter: invert(100%);\n      }\n\n    `\n  }\n\n  render () {\n    const { h, hc, s } = this\n    const { invert } = this.props.display\n\n    return h('div', { classes: { [s.game]: true, [s.isInvertColors]: invert } }, [\n      this.renderModal(),\n      this.renderPanel(),\n      this.renderHUD(),\n      this.renderScene()\n    ])\n  }\n\n  renderModal () {\n    const { h, hc } = this\n    const { ui, keyboardShortcuts } = this.props\n    const { modal } = ui\n\n    let title = null\n    let content = null\n\n    if (!modal) {\n      return null\n    } else if (modal === 'keyboardControls') {\n      title = 'Keyboard Controls'\n      content = hc(KBCView, { keyboardShortcuts })\n    }\n\n    return hc(ModalView, { keyboardShortcuts, title }, [content])\n  }\n\n  renderPanel () {\n    const { hc } = this\n    const { status, player, display, ui, keyboardShortcuts } = this.props\n\n    return hc(PanelView, { status, player, display, ui, keyboardShortcuts })\n  }\n\n  renderScene () {\n    const { hc } = this\n    const { status, display, player, place } = this.props\n\n    if (status === 'stopped' && !place) {\n      return null\n    }\n\n    return hc(SceneView, { status, display, player, place })\n  }\n\n  renderHUD () {\n    const { hc } = this\n    const { status, ui, display } = this.props\n\n    if (status === 'stopped') {\n      return null\n    }\n\n    return hc(HUDView, { ui, display })\n  }\n\n}\n\n/* ==== Game Main ==== */\n\n// Sound\nconst soundManager = new SoundManager()\n\n// Store instance\nconst store = new Store(\n  // middlewares.logger,\n  middlewares.linked,\n  middlewares.soundSpawn(soundManager)\n)\n\n// @TODO: MainLoop && Animation\nclass Game {\n\n  static getDefaultProps () {\n    return {\n      renderMode: 'dom', // 'dom' | 'canvas'\n      keyboardShortcuts: {\n        // HUD\n        select: 'enter',\n        togglePopup: 'escape|p',\n        // openMap: 'm',\n        invertPageColors: 'i',\n        getSolution: 'h',\n\n        // Sence Type\n        switchToTextScene: 't',\n        switchToGraphicScene: 'g',\n\n        // Direction\n        moveLeft: 'leftArrow|a',\n        moveRight: 'rightArrow|d',\n        moveUp: 'upArrow|w',\n        moveDown: 'downArrow|s'\n\n        // Actions\n        // jump: 'spacebar|j',\n        // attack: 'k'\n      }\n    }\n  }\n\n  constructor (props) {\n    // Data\n    this.props = Object.assign({}, Game.getDefaultProps(), props) // Immutable = state\n    this.state = store.getState() // Update by dispatching action\n    this.places = [] // Local data\n    // DOMs\n    this.$container = document.querySelector('.gameContainer')\n    this.$body      = document.querySelector('body')\n    // Events\n    this.keyboardListener = null\n    this._eventListeners()\n    // Mount\n    this._render(this.state)\n    this._genPlaces()\n    // @DEV\n    // soundManager.bgm.mute(true)\n    // soundManager.effects.mute(true)\n    // this.start()\n  }\n\n  _eventListeners () {\n    // User inputs\n    this.keyboardListener = new KeyboardListener({\n      handlePress: this._handlePlayerKeydown.bind(this)\n    })\n\n    // Window\n    window.addEventListener('resize', this._handleResizeWindow.bind(this), false)\n\n    // Store\n    store.subscribe(this._update.bind(this))\n\n    // @MAYBE: Router, Socket...\n    return this\n  }\n\n  _handlePlayerKeydown (keyCode) {\n    const { keymap } = utils\n    const { keyboardShortcuts } = this.props\n    const { status } = this.state\n\n    const inputKeyName = keymap(keyCode)\n    const persistingControls = ['togglePopup', 'select', 'invertPageColors', 'moveUp', 'moveDown']\n    const persistingKeys = persistingControls\n      .map(control => keyboardShortcuts[control])\n      .join('|')\n      .split('|')\n\n    const disableConditions = [\n      () => inputKeyName === undefined,\n      () => status !== 'started' && persistingKeys.indexOf(inputKeyName) === -1\n    ]\n\n    if (disableConditions.some(c => c())) return\n\n    this._runActionByMatchKey(inputKeyName)\n  }\n\n  _runActionByMatchKey (key) {\n    const { keyboardShortcuts } = this.props\n\n    for (let action in keyboardShortcuts) {\n      const pattern = keyboardShortcuts[action]\n      const isMatched = new RegExp(`^(${pattern})$`, 'ig').test(key)\n      // @TODO: Move event handlers into each view components, especially for UI\n      if (isMatched) this[`handle${utils.capitalize(action)}`]()\n    }\n  }\n\n  _handleResizeWindow () {\n    store.dispatch(actionCreators.resizeWindow())\n  }\n\n  _genPlaces () {\n    const { places } = this\n\n    const placeNames = [\n      'Brekka',\n      // 'Prestbakki',\n      'Tungufell'\n    ]\n\n    const baseCols  = 57\n    const baseRows  = 47\n    const sizeDelta = 21\n\n    placeNames.map((name, index) => {\n      const cols = baseCols + (index * sizeDelta)\n      const rows = baseRows + (index * sizeDelta)\n\n      const grid = new MazeGrid({ cols, rows, name })\n      const place = {\n        index,\n        name,\n        cols,\n        rows,\n        grid,\n        map: grid.getMatrix()\n      }\n\n      places.push(place)\n      store.dispatch(actionCreators.addPlace({}))\n    })\n  }\n\n  _update () {\n    this.state = store.getState()\n    const combinedState = this._genCombinedState(this.state)\n    this.renderer.update(combinedState)\n  }\n\n  _genCombinedState (state) {\n    const { keyboardShortcuts } = this.props\n    const place = this.getCurrentPlace()\n\n    return Object.assign({}, state, {\n      keyboardShortcuts,\n      place\n    })\n  }\n\n  _render () {\n    const { renderMode } = this.props\n\n    switch (renderMode) {\n      case 'dom':\n        return this._renderInDOM()\n      case 'canvas':\n        return this._renderInCanvas()\n    }\n  }\n\n  _renderInDOM ()  {\n    const combinedState = this._genCombinedState(this.state)\n\n    this.renderer = new GameView(combinedState)\n    this.renderer.mount(this.$container)\n  }\n\n  _renderInCanvas (state) {\n    const combinedState = this._genCombinedState(this.state)\n\n    // @TODO: HTML 2 Canvas\n    // @P.S. Supportting multiple renderers is a complex abstraction, refer to Pixi.js or React\n  }\n\n  _initPlayer () {\n    const place = this.getCurrentPlace()\n    const startCell = place.grid.getStartCell()\n\n    store.dispatch(actionCreators.playerMoveTo(startCell.getPoint()))\n  }\n\n  getCurrentPlace () {\n    const { places } = this\n    const { display } = this.state\n    const { cameraTraceTarget } = display\n\n    const placeIndex = this.state[cameraTraceTarget].placeIndex\n\n    return places[placeIndex]\n  }\n\n  start () {\n    const { display } = this.state\n    const { startTime } = display\n\n    if (!startTime) {\n      store.dispatch(actionCreators.startTime(new Date()))\n      this._initPlayer()\n    }\n\n    store.dispatch(actionCreators.startGame())\n    soundManager.bgm.play()\n  }\n\n  pause () {\n    store.dispatch(actionCreators.pauseGame())\n    soundManager.bgm.pause()\n  }\n\n  resume () {\n    this.start()\n  }\n\n  stop () {\n    this.places = []\n    this._genPlaces()\n    store.dispatch(actionCreators.stopGame())\n\n    soundManager.bgm.pause()\n    soundManager.bgm.seek(0)\n  }\n\n  handleTogglePopup () {\n    const { status, ui } = this.state\n\n    if (ui.modal) {\n      return store.dispatch(actionCreators.updateModal(null))\n    }\n\n    if (status === 'paused') {\n      this.resume()\n    } else if (status === 'started') {\n      this.pause()\n    }\n  }\n\n  handleSelect () {\n    const { status, ui } = this.state\n\n    if (ui.modal) {\n      return store.dispatch(actionCreators.updateModal(null))\n    }\n\n    if (!ui.panel) return\n\n    soundManager.play('effects', 'click')\n\n    switch (ui.onSelectAction) {\n      case 'giveFeedback':\n        return window.open(FEEDBACK_URL)\n      case 'startGame':\n        return this.start()\n      case 'stopGame':\n       return this.stop()\n      default:\n        const action = actionCreators[ui.onSelectAction]\n        if (action) store.dispatch(action())\n    }\n  }\n\n  _handleMovePlayer (dir) {\n    const place = this.getCurrentPlace()\n    const { player } = this.state\n    const { getDX, getDY } = direction\n    const { grid } = place\n\n    const nextPoint = {\n      x: player.x + getDX(dir),\n      y: player.y + getDY(dir)\n    }\n\n    const nextCell = grid.getCellAt(nextPoint.x, nextPoint.y)\n\n    if (!nextCell || !nextCell.walkable) {\n      return null\n    }\n\n    nextCell.walk()\n    store.dispatch(actionCreators.playerMove(dir))\n\n    if (nextCell.type === 'end') {\n      this._handleEndPoint()\n    }\n  }\n\n  _handleEndPoint () {\n    const { places } = this\n    const { player } = this.state\n\n    const nextPlaceIndex = player.placeIndex + 1\n\n    if (nextPlaceIndex >= places.length) {\n      store.dispatch(actionCreators.endTime(new Date()))\n      store.dispatch(actionCreators.winGame())\n    } else {\n      store.dispatch(actionCreators.playerPlaceIndex(nextPlaceIndex))\n      this._initPlayer()\n    }\n\n    soundManager.effects.play('success')\n  }\n\n  handleMoveLeft () {\n    this._handleMovePlayer('W')\n  }\n\n  handleMoveRight () {\n    this._handleMovePlayer('E')\n  }\n\n  handleMoveUp () {\n    const { status, ui } = this.state\n    const { panel, panelActions, onSelectAction, modal } = ui\n\n    if (modal) return\n\n    if (panel) {\n      const currentIndex = panelActions.indexOf(onSelectAction)\n      const nextIndex = currentIndex === 0 ? panelActions.length - 1 : currentIndex - 1\n      const nextAction = panelActions[nextIndex]\n      store.dispatch(actionCreators.switchCurrentlySelectedAction(nextAction))\n    } else if (status === 'started') {\n      this._handleMovePlayer('N')\n    }\n  }\n\n  handleMoveDown () {\n    const { status, ui } = this.state\n    const { panel, panelActions, onSelectAction, modal } = ui\n\n    if (modal) return\n\n    if (panel) {\n      const currentIndex = panelActions.indexOf(onSelectAction)\n      const nextIndex = currentIndex === panelActions.length - 1 ? 0 : currentIndex + 1\n      const nextAction = panelActions[nextIndex]\n      store.dispatch(actionCreators.switchCurrentlySelectedAction(nextAction))\n    } else if (status === 'started') {\n      this._handleMovePlayer('S')\n    }\n  }\n\n  handleOpenMap () {\n    store.dispatch(actionCreators.toggleMap())\n  }\n\n  handleInvertPageColors () {\n    store.dispatch(actionCreators.invertPageColors())\n  }\n\n  handleGetSolution () {\n    store.dispatch(actionCreators.toggleSolution())\n  }\n\n  handleSwitchToTextScene () {\n    store.dispatch(actionCreators.switchSenceType('text'))\n  }\n\n  handleSwitchToGraphicScene () {\n    store.dispatch(actionCreators.switchSenceType('graphic'))\n  }\n\n  handleJump () {\n    // @TODO\n  }\n\n  handleAttack () {\n    // @TODO\n  }\n\n}\n\n/* == Init == */\nvoid function init () {\n  const config = { }\n  const game = new Game(config)\n  if (DEBUG) window.game = game\n}()\n\n}()\n"]}