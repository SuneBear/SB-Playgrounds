{"version":3,"sources":["../../../../src/games/peaceful-roguelike-wonderland/scripts.js"],"names":["GAME_NAME","FEEDBACK_URL","NOOP","utils","compose","fns","reduceRight","composed","fn","arg","capitalize","str","toUpperCase","slice","keymap","keyCodesMap","i","String","fromCharCode","swappedKeyCodesMap","Object","keys","reduce","obj","key","parseInt","randomInteger","min","max","omits","number","Math","floor","random","indexOf","randomChoice","randIndex","array","length","shuffle","currentIndex","randomIndex","temporaryValue","simulateKeydown","event","Event","keyName","keyCode","which","window","dispatchEvent","throttle","func","wait","options","timeout","context","args","result","previous","later","leading","Date","now","apply","throttled","remaining","arguments","clearTimeout","trailing","setTimeout","cancel","direction","orthogonal","diagonal","all","concat","getCode","dir","getDX","getDY","getOpposite","Point","x","y","assign","getDefaultOptions","toCompare","GridCell","type","walkable","isWalked","isSolution","code","openingDirs","map","updateOptions","BaseGrid","cellOptions","name","cols","rows","total","matrix","_buildMatrix","cellMatrix","Array","isValidCell","conditions","every","c","cell","diagonalMovement","isValidAt","isWalkableAt","bind","neighbors","nx","ny","push","DiagonalMovement","Never","OnlyWhenNoObstacles","N","E","S","W","NW","NE","SE","SW","IfAtMostOneObstacle","Always","Error","newGrid","constructor","newMatrix","clone","RoguelikeGrid","MazeGrid","types","wall","road","start","end","startPoint","endPoint","_buildMazeGrid","_genStartCell","_genEndCell","_buildRoadCells","_genSolution","currentCell","getStartCell","activeCellList","index","getNeighbors","_isUnvisitedAt","_breakDefaultCellAndCraveRoad","defaultCellNeighbors","filter","neighbor","hasTooManyDefaultCells","round","_visited","pop","getCellAt","omittedXs","omittedYs","_genRandomPoint","startCell","endCell","finder","AStarFinder","solution","findPath","getEndCell","soln","correct","heuristic","manhattan","dx","dy","euclidean","sqrt","octile","F","SQRT2","BaseFinder","grid","weight","node","path","parent","reverse","_backtrack","openList","Heap","nodeA","nodeB","f","g","_opened","empty","_closed","ng","h","abs","updateItem","DEBUG","console","error","actionCreators","startGame","linked","pauseGame","stopGame","winGame","switchSenceType","sceneType","toggleMap","toggleSolution","startTime","endTime","resizeWindow","playerMove","meta","sound","playerMovedSteps","playerMoveTo","point","playerPlaceIndex","placeIndex","addPlace","place","updatePlace","newPlace","updatePlaceMap","newPlaceMap","openStartPanel","openPausePanel","openWinPanel","updateModal","modal","openKeyboardControlsModal","switchCurrentlySelectedAction","actionName","closePanel","reducers","status","state","action","display","player","movedSteps","places","ui","panel","panelActions","onSelectAction","middlewares","logger","next","groupCollapsed","group","info","JSON","stringify","groupEnd","store","getState","isArray","_actionSpawn","linkedAction","undefined","dispatch","soundSpawn","soundManager","isSoundManager","split","soundName","spriteName","play","Store","page","cameraTraceTarget","subscribers","prevState","_reduce","_enableReduxDevtools","_dispatchCombineMiddlewares","getInitialState","_devStore","devToolsExtension","subscribe","setState","_notifySubscribers","chain","middleware","subscriber","KeyboardListener","isKeyRepeat","handlePress","handleRelease","pressedKeys","throttledHandleKeydown","handleKeydown","addEventListener","e","handleKeyup","isPressed","SoundManager","bgmURLs","effectsURLs","effectsSprite","hover","click","move","success","onLoadedSuccess","mount","_loadedTypes","soundBuilder","warn","_sprite","validSprites","join","_loaded","sprite","src","loop","onload","onLoaded","Howl","AbsoluteLayoutEngine","unit","unitLength","isNagative","left","top","offset","getPositionAt","transform","HeroFocusedCamera","layoutEngine","heroPoint","totalCols","totalRows","viewportCols","innerWidth","viewportRows","innerHeight","aspectRatio","getViewportSize","minX","maxX","cameraX","minY","maxY","cameraY","getPositionTransformAt","width","height","mixinWithComponent","mixins","MixedComponent","mixinConstructors","call","mixin","_constructor","prototype","vnodeMixin","maquette","_subClasses","_projector","createProjector","hc","ComponentClass","props","children","component","componentName","updateProps","render","$container","renderFunction","append","update","scheduleRender","resume","stop","_insertedCss","_styleVariables","svPrimary","svSecond","svBackground","svMask","svCard","svZIndexScene","svZIndexHud","svZIndexPanel","svZIndexModal","zPlaceholder","styleMixin","csjs","style","sv","styles","_s","styleName","classNames","s","sc","classnames","deps","classnamesObj","classname","constructorName","staticCss","getCss","insertCss","BaseView","canAutoRender","getDefaultProps","ModalView","classes","modalView","modalDialog","renderHeader","modalBody","modalMask","onclick","handleCloseClick","title","modalHeader","renderTitle","modalClose","modalTitle","keyboardShortcuts","togglePopup","KBCView","keyboardShortcutsMap","kbcView","shortcutItem","shortcutKey","innerHTML","formatKeyAndAction","shortcutAction","sep","replace","toLowerCase","input","output","textToSymbol","leftArrow","rightArrow","upArrow","downArrow","text","decamelize","HUDView","hudView","renderMap","PanelView","renderStartPanel","renderPausedPanel","renderWonPanel","panelWrap","panelBody","panelTitle","panelList","actionTexts","renderPanelWrap","renderPanelButton","stepsTaken","secondsTaken","getTime","ceil","blessings","wonBlessings","bottons","panelButton","isActive","dataAction","onmouseover","handlePanelButtonHover","handlePanelButtonClick","$target","currentTarget","getAttribute","select","SceneView","svTextCellSize","svTextCellUnit","lsv","renderTextScene","renderGraphicScene","sceneWrap","getCameraTraceTarget","camera","viewportOffset","getViewportOffset","sceneLayerSize","getSceneLayerSize","renderSceneWrap","scene","textScene","sceneLayer","sceneEntities","renderTextScenePlayer","sceneMap","col","commonCol","renderTextCell","playerOffset","textCell","commonEntity","textEntity","typePlayer","wallSymbols","roadSymbols","typeSymbolsMap","topClasses","commonCell","graphicScene","GameView","game","renderModal","renderPanel","renderHUD","renderScene","content","Game","renderMode","getSolution","switchToTextScene","switchToGraphicScene","moveLeft","moveRight","moveUp","moveDown","document","querySelector","$body","keyboardListener","_eventListeners","_render","_genPlaces","bgm","mute","_handlePlayerKeydown","_handleResizeWindow","_update","inputKeyName","persistingControls","persistingKeys","control","disableConditions","some","_runActionByMatchKey","pattern","isMatched","RegExp","test","placeNames","baseCols","baseRows","sizeDelta","getMatrix","combinedState","_genCombinedState","renderer","getCurrentPlace","_renderInDOM","_renderInCanvas","getPoint","_initPlayer","pause","seek","open","nextPoint","nextCell","walk","_handleEndPoint","nextPlaceIndex","effects","_handleMovePlayer","nextIndex","nextAction","init","config"],"mappings":"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","file":"scripts.js","sourcesContent":["void function () {\n\n/**\n * Peaceful Roguelike Wonderland\n *\n * @Project URL: https://github.com/SuneBear/SB-Playgrounds/tree/master/src/games/peaceful-roguelike-wonderland\n *\n * @Dependences:\n *  - Grid\n *  |-- Heap.js - A binary heap implementation in CoffeeScript/JavaScript. Ported from Python's heapq module\n *  |-- PathFinding.js - A comprehensive path-finding library for grid based games\n *  - View\n *  |-- CSJS - Write modular, scoped CSS with valid JavaScript\n *  |-- Classnames - A simple javascript utility for conditionally joining classNames together\n *  |-- Maquette - Pure and simple virtual DOM library\n *  - Sound\n *  |-- Howler.js - Javascript audio library for the modern web\n *\n * @Code Overview:\n *  - Constants\n *  - Utils\n *  |-- Compose\n *  |-- Capitalize\n *  |-- Keymap\n *  |-- Random Integer\n *  |-- Random Choice\n *  |-- Shuffle\n *  |-- Simulate Keydown\n *  |-- Throttle\n *  - Roguelike\n *  |-- Direction\n *  |-- Point\n *  |-- Grid Generators\n *  |--|-- Grid Cell\n *  |--|-- Base Grid\n *  |--|-- Roguelike Grid\n *  |--|-- Maze Grid\n *  |-- Path Finders (Dependence on PathFinding.js)\n *  |--|-- Diagonal Movement\n *  |--|-- Heuristic\n *  |--|-- Base Finder\n *  |--|-- AStar Finder (Dependence on Heap.js)\n *  - Data Layer: Redux-like Pattern\n *  |-- Action Creators\n *  |-- Reducers\n *  |-- Middlewares\n *  |-- Store Core\n *  - View Component Layer\n *  |-- Library & Engine\n *  |--|-- Keyboard Listener\n *  |--|-- Sound Manager (Dependence on Howler.js)\n *  |--|-- Absolute Layout\n *  |--|-- Hero-Focused Camera\n *  |-- Mixin: Currently just a sorted feature without interfering, please improve me...\n *  |--|-- Mixin with Component (Deprecated)\n *  |--|-- VNode Mixin (Dependence on Maquette)\n *  |--|-- Style Mixin (Dependence on CSJS & Classnames)\n *  |-- View\n *  |--|-- Base View\n *  |--|-- Bottom Views: UI, High Order\n *  |--|-- Top Views: Render Layer, Singleton\n *  |-- Game Main\n *  - Init\n *\n * @List of Abbrs. of the View Component:\n *  - h: HyperScript implemented by Maquette\n *  - hc: Include a view component in HyperScript\n *  - s: Object of CSJS styles\n *  - sv: Object of shared style variables\n *  - sc: classNames util\n */\n\n/* == Constants == */\nconst GAME_NAME = 'Peaceful Roguelike Wonderland'\nconst FEEDBACK_URL = 'https://github.com/SuneBear/SB-Playgrounds/issues/new'\nconst NOOP = () => {}\n\n/* == Utils == */\n\nconst utils = {}\n\n// Compose - FP high order function\nutils.compose = (...fns) => arg => {\n  return fns.reduceRight((composed, fn) => fn(composed), arg)\n}\n\n// Capitalize\nutils.capitalize = str => {\n  return str && str[0].toUpperCase() + str.slice(1)\n}\n\n// Keymap - keyCode <=> keyName\nutils.keymap = (() => {\n  // Incomplete keyCodes map\n  const keyCodesMap = {\n    13: 'enter',\n    27: 'escape',\n    32: 'spacebar',\n    37: 'leftArrow',\n    38: 'upArrow',\n    39: 'rightArrow',\n    40: 'downArrow',\n    46: 'delete'\n  }\n\n  // Append numbers\n  for (let i = 48; i < 58; i++) keyCodesMap[i] = i - 48\n\n  // Append low case alphabets\n  for (let i = 97; i < 123; i++) keyCodesMap[i - 32] = String.fromCharCode(i)\n\n  // Append function keys\n  for (let i = 1; i < 13; i++) keyCodesMap[i + 111] = 'f' + i\n\n  const swappedKeyCodesMap = Object.keys(keyCodesMap).reduce((obj, key) => {\n    obj[keyCodesMap[key]] = parseInt(key)\n    return obj\n  }, {})\n\n  return (arg) => typeof arg === 'number' ? keyCodesMap[arg] : swappedKeyCodesMap[arg]\n})()\n\n// Random Integer\nutils.randomInteger = (min = 0, max = 1, omits = []) => {\n  const number = Math.floor(Math.random() * (max - min + 1) + min)\n  return omits.indexOf(number) === -1 ? number : utils.randomInteger(...arguments)\n}\n\n// Random Choice\nutils.randomChoice = array => {\n  const randIndex = Math.floor(Math.random() * array.length)\n  return array[randIndex]\n}\n\n// Shuffle - the Fisher-Yates (aka Knuth) shuffle\n// @REF: http://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\nutils.shuffle = array => {\n  let currentIndex = array.length\n  let randomIndex, temporaryValue\n\n  // While there remain elements to shuffle...\n  while (currentIndex !== 0) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex)\n    currentIndex -= 1\n\n    // And swap it with the current element\n    temporaryValue = array[currentIndex]\n    array[currentIndex] = array[randomIndex]\n    array[randomIndex] = temporaryValue\n  }\n\n  return array\n}\n\n// Simulate Keydown\nutils.simulateKeydown = keyName => {\n  const { keymap } = utils\n\n  const event = new Event('keydown')\n  event.key = keyName\n  event.keyCode = keymap(keyName)\n  event.which = event.keyCode\n\n  window.dispatchEvent(event)\n}\n\n// Throttle\n// @REF: http://underscorejs.org/#throttle\nutils.throttle = (func, wait, options) => {\n  let timeout, context, args, result\n  let previous = 0\n  if (!options) options = {}\n\n  const later = function() {\n    previous = options.leading === false ? 0 : Date.now()\n    timeout = null\n    result = func.apply(context, args)\n    if (!timeout) context = args = null\n  }\n\n  const throttled = function() {\n    const now = Date.now()\n    if (!previous && options.leading === false) previous = now\n    const remaining = wait - (now - previous)\n    context = this\n    args = arguments\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout)\n        timeout = null\n      }\n      previous = now\n      result = func.apply(context, args)\n      if (!timeout) context = args = null\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining)\n    }\n    return result\n  }\n\n  throttled.cancel = function() {\n    clearTimeout(timeout)\n    previous = 0\n    timeout = context = args = null\n  }\n\n  return throttled\n}\n\n/* == Roguelike == */\n\n/* ==== Direction ==== */\nconst direction = {}\n\ndirection.orthogonal = ['N', 'E', 'S', 'W']\n\ndirection.diagonal = ['NW', 'NE', 'SE', 'SW']\n\ndirection.all = [].concat(direction.orthogonal, direction.diagonal)\n\ndirection.getCode = (dir) => {\n  switch (dir) {\n    case 'N': return 1 << 3 // 8\n    case 'E': return 1 << 2 // 4\n    case 'S': return 1 << 1 // 2\n    case 'W': return 1 << 0 // 1\n    default : return 0\n  }\n}\n\ndirection.getDX = (dir) => {\n  switch (dir) {\n    case 'N': return 0\n    case 'E': return 1\n    case 'S': return 0\n    case 'W': return -1\n  }\n}\n\ndirection.getDY = (dir) => {\n  switch (dir) {\n    case 'N': return -1\n    case 'E': return 0\n    case 'S': return 1\n    case 'W': return 0\n  }\n}\n\ndirection.getOpposite = (dir) => {\n  switch (dir) {\n    case 'N': return 'S'\n    case 'E': return 'W'\n    case 'S': return 'N'\n    case 'W': return 'E'\n\n    case 'NW': return 'SE'\n    case 'NE': return 'SW'\n    case 'SE': return 'NW'\n    case 'SW': return 'NE'\n  }\n}\n\n/* ==== Point ==== */\n\nclass Point {\n\n  static getDefaultOptions () {\n    return {\n      x: 0,\n      y: 0\n    }\n  }\n\n  constructor (options) {\n    this.options = Object.assign(Point.getDefaultOptions(), options)\n    Object.assign(this, this.options)\n  }\n\n  updateOptions (options) {\n    Object.assign(this.options, options)\n    Object.assign(this, this.options)\n  }\n\n  getPoint () {\n    return {\n      x: this.x,\n      y: this.y\n    }\n  }\n\n  isEqual (toCompare) {\n    return this.x == toCompare.x && this.y == toCompare.y\n  }\n\n}\n\n\n/* ==== Grid Generators ==== */\n\n/**\n * Grid Cell\n */\n\nclass GridCell extends Point {\n\n  static getDefaultOptions () {\n    return {\n      type: 'empty',\n      walkable: true,\n      // openingDirs: [],\n      // entities: [],\n      isWalked: false,\n      isSolution: false\n    }\n  }\n\n  constructor (options) {\n    super(Object.assign(GridCell.getDefaultOptions(), options))\n  }\n\n  getOpeningsCode () {\n    const { getCode } = direction\n    let code = 0\n    this.openingDirs.map(dir => code += getCode(dir))\n    return code\n  }\n\n  walk () {\n    this.updateOptions({\n      isWalked: true\n    })\n  }\n\n  correct () {\n    this.updateOptions({\n      isSolution: true\n    })\n  }\n\n  clone () {\n    return new GridCell(this.options)\n  }\n\n}\n\n/**\n * Base Grid\n */\n\nclass BaseGrid {\n\n  static getDefaultOptions () {\n    return {\n      cellOptions: {},\n      name: 'Default Grid',\n      cols: 51, // X or Width\n      rows: 51 // Y or Height\n    }\n  }\n\n  constructor (options) {\n    this.options = Object.assign({}, BaseGrid.getDefaultOptions(), options)\n\n    const { cols, rows, cellOptions} = this.options\n\n    // Core Data\n    this.total = cols * rows\n    this.matrix = this._buildMatrix(cols, rows, cellOptions)\n  }\n\n  _buildMatrix (cols, rows, cellOptions) {\n    const cellMatrix = new Array(cols)\n\n    for (let x = 0; x < cols; ++x) {\n      cellMatrix[x] = new Array(rows)\n      for (let y = 0; y < rows; ++y) {\n        cellMatrix[x][y] = new GridCell(Object.assign({ x, y }, cellOptions))\n      }\n    }\n\n    return cellMatrix\n  }\n\n  getMatrix () {\n    return this.matrix\n  }\n\n  getCellAt (x, y) {\n    if (!this.isValidCell(x, y)) return null\n\n    return this.matrix[x][y]\n  }\n\n  isWalkableAt (x, y) {\n    if (!this.isValidCell(x, y)) return false\n\n    return this.matrix[x][y].walkable\n  }\n\n  isEmptyTypeAt (x, y) {\n    if (!this.isValidCell(x, y)) return false\n\n    return this.matrix[x][y].type === 'empty'\n  }\n\n  isValidCell (x, y) {\n    const { cols, rows } = this.options\n\n    const conditions = [\n      () => x >= 0 && x < cols,\n      () => y >= 0 && y < rows\n    ]\n\n    return conditions.every(c => c())\n  }\n\n  /**\n   * Get the neighbors of the given cell\n   *\n   * @REF: https://github.com/qiao/PathFinding.js/blob/master/src/core/Grid.js#L144\n   *\n   *     offsets      diagonalOffsets\n   *  +---+---+---+    +----+---+----+\n   *  |   | N |   |    | NW |   | NE |\n   *  +---+---+---+    +----+---+----+\n   *  | W |   | E |    |    |   |    |\n   *  +---+---+---+    +----+---+----+\n   *  |   | S |   |    | SW |   | SE |\n   *  +---+---+---+    +----+---+----+\n   */\n  getNeighbors (cell, diagonalMovement, isValidAt = this.isWalkableAt.bind(this)) {\n    const { matrix } = this\n    const { x, y } = cell\n    const neighbors = []\n\n    const openingDirs = {}\n    direction.all.map(dir => openingDirs[dir] = false)\n\n    // ↑ → ↓ ←\n    direction.orthogonal.map(dir => {\n      const nx = x + direction.getDX(dir)\n      const ny = y + direction.getDY(dir)\n\n      if (isValidAt(nx, ny)) {\n        neighbors.push(matrix[nx][ny])\n        openingDirs[dir] = true\n      }\n    })\n\n    if (diagonalMovement === DiagonalMovement.Never) {\n      return neighbors\n    }\n\n    if (diagonalMovement === DiagonalMovement.OnlyWhenNoObstacles) {\n      const { N, E, S, W } = openingDirs\n\n      openingDirs.NW = N & W\n      openingDirs.NE = N & E\n      openingDirs.SE = S & E\n      openingDirs.SW = S & W\n    } else if (diagonalMovement === DiagonalMovement.IfAtMostOneObstacle) {\n      const { N, E, S, W } = openingDirs\n\n      openingDirs.NW = N || W\n      openingDirs.NE = N || E\n      openingDirs.SE = S || E\n      openingDirs.SW = S || W\n    } else if (diagonalMovement === DiagonalMovement.Always) {\n      openingDirs.NW = true\n      openingDirs.NE = true\n      openingDirs.SE = true\n      openingDirs.SW = true\n    } else {\n      throw new Error('Incorrect value of diagonalMovement')\n    }\n\n    // ↖\n    if (openingDirs.NW && isValidAt(x - 1, y - 1)) {\n      neighbors.push(matrix[x - 1][y - 1])\n    }\n    // ↗\n    if (openingDirs.NE && isValidAt(x + 1, y - 1)) {\n      neighbors.push(matrix[x + 1][y - 1])\n    }\n    // ↘\n    if (openingDirs.SE && isValidAt(x + 1, y + 1)) {\n      neighbors.push(matrix[x + 1][y + 1])\n    }\n    // ↙\n    if (openingDirs.SW && isValidAt(x - 1, y + 1)) {\n      neighbors.push(matrix[x - 1][y + 1])\n    }\n\n    return neighbors\n  }\n\n  clone () {\n    const { matrix } = this\n    const { cols, rows } = this.options\n\n    const newGrid = new this.constructor(this.options)\n    const newMatrix = new Array(cols)\n\n    for (let x = 0; x < cols; ++x) {\n      newMatrix[x] = new Array(cols)\n      for (let y = 0; y < rows; ++y) {\n        newMatrix[x][y] = matrix[x][y].clone()\n      }\n    }\n\n    newGrid.matrix = newMatrix\n\n    return newGrid\n  }\n\n}\n\n/**\n * Roguelike Grid\n *\n * @TODO: Generate a roguelike grid\n */\n\nclass RoguelikeGrid extends BaseGrid {\n\n  static getDefaultOptions () {\n    return {\n\n    }\n  }\n\n  constructor (options) {\n    super(Object.assign(RoguelikeGrid.getDefaultOptions(), options))\n  }\n\n}\n\n/**\n * Maze Grid\n */\n\nclass MazeGrid extends BaseGrid {\n\n  static getDefaultOptions () {\n    return {\n      cellOptions: {\n        type: 'wall',\n        walkable: false\n      },\n      types: {\n        wall: {\n          walkable: false\n        },\n        road: {\n          walkable: true\n        },\n        start: {\n          walkable: true\n        },\n        end: {\n          walkable: true\n        }\n      },\n      startPoint: null,\n      endPoint: null\n    }\n  }\n\n  constructor (options) {\n    super(Object.assign(MazeGrid.getDefaultOptions(), options))\n    this._buildMazeGrid()\n  }\n\n  _buildMazeGrid () {\n    this._genStartCell()\n    this._genEndCell()\n    this._buildRoadCells()\n    this._genSolution()\n  }\n\n  /**\n   * Based on Growing Tree algorithm\n   *\n   * @REF: http://weblog.jamisbuck.org/2011/1/27/maze-generation-growing-tree-algorithm\n   * @TODO: Improve performance of the loops & move the algorithm somewhere else\n   */\n  _buildRoadCells () {\n    const { randomInteger, randomChoice } = utils\n    // const { orthogonal, getDX, getDY, getOpposite } = direction\n    const { matrix } = this\n    const { cols, rows, cellOptions } = this.options\n\n    // Create an empty list of cells & add the starting cell to it\n    let currentCell = this.getStartCell()\n    const activeCellList = []\n    activeCellList.push(currentCell)\n\n    // Loop through adding to cells list if there are unvisited neighbours to add, or remove cells if not\n    // when cell list is empty we know that the maze contains all the cells\n    while (activeCellList.length > 0) {\n      // Set the current cell to the most recently added cell in the cell list\n      let index = activeCellList.length - 1\n      currentCell = activeCellList[index]\n\n      const neighbors = this.getNeighbors(currentCell, DiagonalMovement.Never, this._isUnvisitedAt.bind(this))\n\n\n      if (neighbors.length) {\n        this._breakDefaultCellAndCraveRoad(currentCell)\n\n        const defaultCellNeighbors = neighbors.filter(neighbor => {\n          return neighbor.type === cellOptions.type\n        })\n\n        const hasTooManyDefaultCells = Math.round(defaultCellNeighbors.length/neighbors.length)\n\n        if (hasTooManyDefaultCells) {\n          const neighbor = randomChoice(defaultCellNeighbors)\n          this._breakDefaultCellAndCraveRoad(neighbor)\n        }\n\n        neighbors.map(neighbor => {\n          neighbor._visited = true\n          activeCellList.push(neighbor)\n        })\n\n      } else {\n        activeCellList.pop()\n      }\n\n    }\n\n  }\n\n  _breakDefaultCellAndCraveRoad (cell) {\n    const { cellOptions } = this.options\n\n    if (cell.type !== cellOptions.type) return\n\n    cell.updateOptions({\n      type: 'road',\n      walkable: true\n    })\n  }\n\n  _isUnvisitedAt (x, y) {\n    const cell = this.getCellAt(x, y)\n\n    if (!cell) return false\n\n    return !cell._visited\n  }\n\n  _genRandomPoint (omittedXs = [], omittedYs = []) {\n    const { randomInteger } = utils\n    const { cols, rows } = this.options\n\n    return {\n      x: randomInteger(0, cols - 1, omittedXs),\n      y: randomInteger(0, rows - 1, omittedYs)\n    }\n  }\n\n  _genStartCell () {\n    const { matrix } = this\n    let { startPoint } = this.options\n\n    if (!startPoint) {\n      startPoint = this._genRandomPoint()\n    }\n\n    const { x, y } = startPoint\n\n    this.startCell = matrix[x][y] = new GridCell({ x, y, type: 'start' })\n  }\n\n  _genEndCell () {\n    const { randomInteger } = utils\n    const { matrix, startCell, _genRandomPoint } = this\n    const { cols, rows } = this.options\n    let { endPoint } = this.options\n\n    if (!endPoint) {\n      endPoint = this._genRandomPoint([startCell.x], [startCell.y])\n    }\n\n    const { x, y } = endPoint\n\n    this.endCell = matrix[x][y] = new GridCell({ x, y, type: 'end' })\n  }\n\n  _genSolution () {\n    const finder = new AStarFinder()\n\n    const solution = finder.findPath(\n      this.getStartCell(),\n      this.getEndCell(),\n      this\n    )\n\n    if (!solution.length) return\n\n    this.solution = solution\n    solution.map(soln => {\n      const [x, y] = soln\n      const cell = this.getCellAt(x, y)\n      cell.correct()\n    })\n\n  }\n\n  getStartCell () {\n    return this.startCell\n  }\n\n  getEndCell () {\n    return this.endCell\n  }\n\n  getSolution () {\n    return this.solution\n  }\n\n}\n\n/* ==== Path Finders ==== */\n\n/**\n * Diagonal Movement - Grouped Constants\n */\n\nconst DiagonalMovement = {\n  Always: 1,\n  Never: 2,\n  IfAtMostOneObstacle: 3,\n  OnlyWhenNoObstacles: 4\n}\n\n/**\n * Heuristic\n */\n\nconst heuristic = {}\n\nheuristic.manhattan = (dx, dy) => {\n  return dx + dy\n}\n\nheuristic.euclidean = (dx, dy) => {\n  return Math.sqrt(dx * dx + dy * dy)\n}\n\nheuristic.octile = (dx, dy) => {\n  const F = Math.SQRT2 - 1\n  return (dx < dy) ? F * dx + dy : F * dy + dx\n}\n\n/**\n * BaseFinder\n */\n\nclass BaseFinder {\n\n  static getDefaultOptions () {\n    return {\n      diagonalMovement: DiagonalMovement.Never, // Allowed diagonal movement\n      heuristic: heuristic.manhattan // Heuristic function to estimate the distance\n    }\n  }\n\n  constructor (options) {\n    this.options = Object.assign({}, BaseFinder.getDefaultOptions(), options)\n  }\n\n  findPath (startPoint, endPoint, grid) {\n    throw new Error('Not implemented')\n  }\n\n}\n\n/**\n * AStar Finder\n */\n\nclass AStarFinder extends BaseFinder {\n\n  getDefaultOptions () {\n    return {\n      weight: 1 // Weight to apply to the heuristic to allow for suboptimal paths, in order to speed up the search.\n    }\n  }\n\n  constructor (options) {\n    super(options)\n    Object.assign(this.options, AStarFinder.getDefaultOptions(), options)\n\n    const { diagonalMovement } = this.options\n\n    if (diagonalMovement === DiagonalMovement.Never) {\n      this.options.heuristic = heuristic.octile\n    }\n  }\n\n  _backtrack (node) {\n    const path = [[node.x, node.y]]\n    while (node.parent) {\n      node = node.parent\n      path.push([node.x, node.y])\n    }\n    return path.reverse()\n  }\n\n  findPath (startPoint, endPoint, grid) {\n    const { _backtrack } = this\n    const { heuristic, diagonalMovement, weight } = this.options\n    const startCell = grid.getCellAt(startPoint.x, startPoint.y)\n    const endCell = grid.getCellAt(endPoint.x, endPoint.y)\n    const openList = new Heap((nodeA, nodeB) => nodeA.f - nodeB.f)\n\n    // Set the `g` and `f` value of the start cell to be 0\n    startCell.g = 0\n    startCell.f = 0\n\n    // Push the start cell into the open list\n    openList.push(startCell)\n    startCell._opened = true\n\n    // While the open list is not empty\n    while (!openList.empty()) {\n      // Pop the position of cell which has the minimum `f` value.\n      const cell = openList.pop()\n      cell._closed = true\n\n      // If reached the end position, construct the path and return it\n      if (cell.x === endCell.x && cell.y === endCell.y) {\n        return _backtrack(endCell)\n      }\n\n      // Get neigbours of the current cell\n      const neighbors = grid.getNeighbors(cell, diagonalMovement)\n\n      for (let i = 0; i < neighbors.length; ++i) {\n        const neighbor = neighbors[i]\n\n        if (neighbor._closed) continue\n\n        const { x, y } = neighbor\n\n        // Get the distance between current cell and the neighbor\n        // And calculate the next g score\n        const ng = cell.g + ((x - cell.x === 0 || y - cell.y === 0) ? 1 : Math.SQRT2)\n\n        // Check if the neighbor has not been inspected yet, or\n        // can be reached with smaller cost from the current cell\n        if (!neighbor._opened || ng < neighbor.g) {\n          neighbor.g = ng\n          neighbor.h = neighbor.h || weight * heuristic(Math.abs(x - endPoint.x), Math.abs(y - endPoint.y))\n          neighbor.f = neighbor.g + neighbor.h\n          neighbor.parent = cell\n\n          if (!neighbor._opened) {\n            openList.push(neighbor)\n            neighbor._opened = true\n          } else {\n            // The neighbor can be reached with smaller cost.\n            // Since its f value has been updated, we have to\n            // update its position in the open list\n            openList.updateItem(neighbor)\n          }\n        }\n      } // End for each neighbor\n    } // End while not open list empty\n\n    // Fail to find the path\n    if (DEBUG) console.error('A* failed to find path')\n    return []\n  }\n\n}\n\n/* == Data Layer == */\n\n/* ==== Action Creators ==== */\nconst actionCreators = {}\n\n// Status\nactionCreators.startGame = () => {\n  return {\n    type: 'Status/StartGame',\n    linked: ['closePanel']\n  }\n}\n\nactionCreators.pauseGame = () => {\n  return {\n    type: 'Status/PauseGame',\n    linked: ['openPausePanel']\n  }\n}\n\nactionCreators.stopGame = () => {\n  return {\n    type: 'Status/StopGame'\n  }\n}\n\nactionCreators.winGame = () => {\n  return {\n    type: 'Status/WinGame',\n    linked: ['openWinPanel'],\n  }\n}\n\n// Display\nactionCreators.switchSenceType = (sceneType) => {\n  return { type: 'Display/SceneType', sceneType }\n}\n\nactionCreators.toggleMap = () => {\n  return { type: 'Display/ToggleMap' }\n}\n\nactionCreators.toggleSolution = () => {\n  return { type: 'Display/ToggleSolution' }\n}\n\nactionCreators.startTime = (startTime) => {\n  return { type: 'Display/StartTime', startTime }\n}\n\nactionCreators.endTime = (endTime) => {\n  return { type: 'Display/EndTime', endTime }\n}\n\nactionCreators.resizeWindow = () => {\n  return { type: 'Display/ResizeWindow' }\n}\n\n// Player\nactionCreators.playerMove = (direction) => {\n  return {\n    type: 'Player/Move',\n    meta: { sound: 'effects.move' },\n    linked: ['playerMovedSteps'],\n    direction\n  }\n}\n\nactionCreators.playerMovedSteps = () => {\n  return { type: 'Player/MovedSteps' }\n}\n\nactionCreators.playerMoveTo = (point) => {\n  return { type: 'Player/MoveTo', point }\n}\n\nactionCreators.playerPlaceIndex = (placeIndex) => {\n  return { type: 'Player/PlaceIndex', placeIndex }\n}\n\n// Places\nactionCreators.addPlace = (place) => {\n  return { type: 'Places/AddPlace', place }\n}\n\nactionCreators.updatePlace = (placeIndex, newPlace) => {\n  return { type: 'Place/Update', placeIndex, newPlace }\n}\n\nactionCreators.updatePlaceMap = (placeIndex, newPlaceMap) => {\n  return { type: 'Place/Map/Update', placeIndex, newPlaceMap }\n}\n\n// UI\nactionCreators.openStartPanel = () => {\n  return { type: 'UI/OpenStartPanel' }\n}\n\nactionCreators.openPausePanel = () => {\n  return { type: 'UI/OpenPausePanel' }\n}\n\nactionCreators.openWinPanel = () => {\n  return { type: 'UI/OpenWinPanel' }\n}\n\nactionCreators.updateModal = (modal) => {\n  return { type: 'UI/OpenModal', modal }\n}\n\nactionCreators.openKeyboardControlsModal = () => {\n  return actionCreators.updateModal('keyboardControls')\n}\n\nactionCreators.switchCurrentlySelectedAction = (actionName) => {\n  return {\n    type: 'UI/SwitchCurrentlySelectedAction',\n    meta: { sound: 'effects.hover' },\n    actionName\n  }\n}\n\nactionCreators.closePanel = () => {\n  return { type: 'UI/ClosePanel' }\n}\n\n/* ==== Reducers ==== */\nconst reducers = {}\n\nreducers.status = (state, action) => {\n  switch (action.type) {\n    case 'Status/StartGame':\n      return 'started'\n    case 'Status/PauseGame':\n      return 'paused'\n    case 'Status/StopGame':\n      return 'stopped'\n    case 'Status/WinGame':\n      return 'won'\n    default:\n      return state\n  }\n}\n\nreducers.display = (state, action) => {\n  switch (action.type) {\n    case 'Display/SceneType':\n      const { sceneType } = action\n      return Object.assign({}, state, { sceneType })\n    case 'Display/StartTime':\n      const { startTime } = action\n      return Object.assign({}, state, { startTime })\n    case 'Display/EndTime':\n      const { endTime } = action\n      return Object.assign({}, state, { endTime })\n    case 'Display/ToggleMap':\n      const map = !state.map\n      return Object.assign({}, state, { map })\n    case 'Display/ToggleSolution':\n      const solution = !state.solution\n      return Object.assign({}, state, { solution })\n    default:\n      return state\n  }\n}\n\nreducers.player = (state, action) => {\n  switch (action.type) {\n    case 'Player/Move':\n      let { x, y } = state\n      const { direction } = action\n      switch (direction) {\n        case 'W':\n          x--\n          break\n        case 'E':\n          x++\n          break\n        case 'N':\n          y--\n          break\n        case 'S':\n          y++\n          break\n      }\n      return Object.assign({}, state, { direction, x, y })\n    case 'Player/MovedSteps':\n      let { movedSteps } = state\n      movedSteps++\n      return Object.assign({}, state, { movedSteps })\n    case 'Player/MoveTo':\n      const { point } = action\n      return Object.assign({}, state, { x: point.x, y: point.y })\n    case 'Player/PlaceIndex':\n      const { placeIndex } = action\n      return Object.assign({}, state, { placeIndex })\n    default:\n      return state\n  }\n}\n\n// @TODO: Split up reducer logic, flatten many-to-many relationships\nreducers.places = (state, action) => {\n  const { placeIndex } = action\n\n  switch (action.type) {\n    case 'Places/AddPlace':\n      const { place } = action\n      return state.concat([place])\n    case 'Place/Update':\n      const { newPlace } = action\n      return state.map(place => {\n        if (place.index !== placeIndex) return place\n        return Object.assign({}, place, newPlace)\n      })\n    case 'Place/Map/Update':\n      const { newPlaceMap } = action\n      return state.map(place => {\n        if (place.index !== placeIndex) return place\n        return Object.assign({}, place, { map: newPlaceMap })\n      })\n    default:\n      return state\n  }\n}\n\nreducers.ui = (state, action) => {\n  switch (action.type) {\n    case 'UI/OpenStartPanel':\n      return Object.assign({}, state, {\n        panel: 'start',\n        panelActions: ['startGame', 'openKeyboardControlsModal', 'giveFeedback'],\n        onSelectAction: 'startGame'\n      })\n    case 'UI/OpenPausePanel':\n      return Object.assign({}, state, {\n        panel: 'pause',\n        panelActions: ['startGame', 'openKeyboardControlsModal', 'stopGame'],\n        onSelectAction: 'startGame'\n      })\n    case 'UI/OpenWinPanel':\n      return Object.assign({}, state, {\n        panel: 'win',\n        panelActions: ['stopGame'],\n        onSelectAction: 'stopGame'\n      })\n    case 'UI/ClosePanel':\n      return Object.assign({}, state, {\n        panel: null\n      })\n    case 'UI/SwitchCurrentlySelectedAction':\n      return Object.assign({}, state, {\n        onSelectAction: action.actionName\n      })\n    case 'UI/OpenModal':\n      const { modal } = action\n      return Object.assign({}, state, { modal })\n    default:\n      return state\n  }\n}\n\n/* ==== Middlewares ==== */\nconst middlewares = {}\n\nmiddlewares.logger = store => next => action => {\n  if (!DEBUG) return next(action)\n\n  console.groupCollapsed(action.type)\n    console.group('Action:')\n      console.info(JSON.stringify(action, '', '\\t'))\n    console.groupEnd()\n    console.groupCollapsed('Previous State:')\n      console.info(JSON.stringify(store.getState(), '', '\\t'))\n    console.groupEnd()\n    const result = next(action)\n    console.groupCollapsed('State:')\n      console.info(JSON.stringify(store.getState(), '', '\\t'))\n    console.groupEnd()\n  console.groupEnd()\n\n  return result\n}\n\n// Run related actions after dispatching a main action\nmiddlewares.linked = store => next => action => {\n  const { linked } = action\n\n  if (!Array.isArray(linked)) {\n    return next(action)\n  }\n\n  linked.map(linkedAction => {\n    const _actionSpawn = actionCreators[linkedAction]\n    if (typeof _actionSpawn === undefined) return\n    store.dispatch(_actionSpawn())\n  })\n\n  return next(action)\n}\n\n// @REF: https://github.com/joshwcomeau/redux-sounds\nmiddlewares.soundSpawn = soundManager => store => next => action => {\n  if (typeof soundManager !== 'object' || !soundManager.isSoundManager) {\n    throw new Error('Missing sound manager')\n  }\n\n  if (!action.meta || !action.meta.sound) {\n    return next(action)\n  }\n\n  const [ soundName, spriteName ] = action.meta.sound.split('.')\n  soundManager.play(soundName, spriteName)\n\n  return next(action)\n}\n\n/* ==== Store Core ==== */\nclass Store {\n\n  static getInitialState () {\n    return {\n      page: 'game', // @MAYBE: About\n      status: 'stopped',\n      display: {\n        sceneType: 'text',\n        cameraTraceTarget: 'player',\n        map: false,\n        solution: false,\n        // Stats\n        startTime: null,\n        endTime: null\n      },\n      player: { // Global Entity\n        // Info\n        name: 'Sarah',\n        // Display\n        placeIndex: 0,\n        direction: 'S',\n        x: 0,\n        y: 0,\n        // Stats\n        movedSteps: 0\n      },\n      places: [],\n      ui: {\n        panel: 'start',\n        onSelectAction: 'startGame',\n        panelActions: ['startGame', 'openKeyboardControlsModal', 'giveFeedback'],\n        modal: null\n      }\n    }\n  }\n\n  constructor (...middlewares) {\n    this.middlewares = middlewares || []\n    this.subscribers = []\n    this.prevState = {}\n    this.state = this._reduce()\n\n    this._enableReduxDevtools()\n\n    if (middlewares.length > 0) {\n      this.dispatch = this._dispatchCombineMiddlewares()\n    }\n  }\n\n  setState (state) {\n    this.prevState = Object.assign({}, this.state)\n    this.state = state\n  }\n\n  getState () {\n    return this.state\n  }\n\n  getPrevState () {\n    return this.prevState\n  }\n\n  _reduce (state = Store.getInitialState(), action = {}) {\n    // @Hack: Reset state\n    if (action.type === 'Status/StopGame') {\n      return Store.getInitialState()\n    }\n\n    // Normal reducers\n    return {\n      status: reducers.status(state.status, action),\n      display: reducers.display(state.display, action),\n      player: reducers.player(state.player, action),\n      places: reducers.places(state.places, action),\n      ui: reducers.ui(state.ui, action)\n    }\n  }\n\n  _enableReduxDevtools () {\n    this._devStore = window.devToolsExtension && window.devToolsExtension(this._reduce)\n    if (this._devStore) {\n      this._devStore.subscribe(() => {\n        this.setState(this._devStore.getState())\n        this._notifySubscribers()\n      })\n    }\n  }\n\n  dispatch (action = {}) {\n    this.setState(this._reduce(this.state, action))\n    this._notifySubscribers()\n    if (this._devStore) this._devStore.dispatch(action)\n    return action\n  }\n\n  _dispatchCombineMiddlewares () {\n    const dispatch = this.dispatch.bind(this)\n    // Inject store \"proxy\" into all middleware\n    const chain = this.middlewares.map(middleware => middleware(this))\n    // Init compose with store.dispatch as initial value\n    return utils.compose(...chain)(dispatch)\n  }\n\n  subscribe (fn) {\n    this.subscribers.push(fn)\n  }\n\n  _notifySubscribers () {\n    this.subscribers.map((subscriber) => {\n      subscriber(this.prevState, this.state)\n    })\n  }\n\n}\n\n/* == View Component Layer == */\n\n/* ==== Library & Engine ==== */\n\n/**\n * Keyboard Listener\n */\n\nclass KeyboardListener {\n\n  static getDefaultOptions () {\n    return {\n      isKeyRepeat: true,\n      handlePress: NOOP,\n      handleRelease: NOOP\n    }\n  }\n\n  constructor (options) {\n    const { throttle } = utils\n\n    this.options = Object.assign({}, KeyboardListener.getDefaultOptions(), options)\n    this.pressedKeys = new Array(255) // ASCII table\n\n    const throttledHandleKeydown = throttle(this.handleKeydown.bind(this), 168, {\n      trailing: false\n    })\n\n    // Attach event listeners\n    window.addEventListener('keydown', e => throttledHandleKeydown(e))\n    window.addEventListener('keyup', e => this.handleKeyup(e))\n  }\n\n  handleKeydown (e) {\n    const { isKeyRepeat, handlePress } = this.options\n    const keyCode = e.keyCode\n\n    if (!isKeyRepeat && this.isPressed(keyCode)) return\n\n    this.pressedKeys[keyCode] = true\n\n    if (typeof handlePress === 'function') {\n      handlePress(e)\n    }\n  }\n\n  handleKeyup (e) {\n    const { handleRelease } = this.options\n    const keyCode = e.keyCode\n\n    this.pressedKeys[keyCode] = false\n\n    if (typeof handleRelease === 'function') {\n      handleRelease(e)\n    }\n  }\n\n  isPressed (keyCode) {\n    return this.pressedKeys[keyCode]\n  }\n\n}\n\n/**\n * Sound Manager\n */\n\nclass SoundManager {\n\n  static getDefaultOptions () {\n    return {\n      bgmURLs: ['./assets/sounds/bgm.mp3'],\n      effectsURLs: ['./assets/sounds/effects.mp3'],\n      effectsSprite: {\n        // HUD\n        hover: [0, 2000],\n        click: [3000, 2000],\n        // Controls\n        move: [15000, 2000],\n        // Status\n        success: [25000, 2000]\n      },\n      onLoadedSuccess: NOOP\n    }\n  }\n\n  constructor (options) {\n    this.options = Object.assign({}, SoundManager.getDefaultOptions(), options)\n    this.isSoundManager = true\n    this.mount()\n  }\n\n  mount () {\n    const { bgmURLs, effectsURLs } = this.options\n\n    this.types = [],\n    this._loadedTypes = []\n\n    if (bgmURLs.length) this.types.push('bgm')\n    if (effectsURLs.length) this.types.push('effects')\n\n    this.types.map(type => this.soundBuilder(type))\n  }\n\n  play (soundName, spriteName) {\n    const sound = this[soundName]\n\n    if (typeof sound === 'undefined') {\n      return console.warn(`\n        The sound '${soundName}' was requested, but SoundManager doesn't have anything registered under that name.\n      `)\n    } else if (spriteName && typeof sound._sprite[spriteName] === 'undefined') {\n      const validSprites = Object.keys(sound._sprite).join(', ');\n\n      return console.warn(`\n        The sound '${soundName}' was found, but it does not have a sprite specified for '${spriteName}'.\n        It only has access to the following sprites: ${validSprites}.\n      `)\n    }\n\n    sound.play(spriteName)\n  }\n\n  onLoaded () {\n    const { onLoadedSuccess } = this.options\n    this._loaded = false\n\n    const conditions = [\n      () => !this._loaded,\n      () => this._loadedTypes.length === this.types.length\n    ]\n\n    if (conditions.every(c => c())) {\n      this._loaded = true\n      onLoadedSuccess()\n    }\n\n  }\n\n  soundBuilder (type) {\n    if (!type) return\n\n    const options = {}\n    const sprite  = this.options[`${type}Sprite`]\n\n    options.src = this.options[`${type}URLs`]\n    options.loop = sprite ? false : true\n    options.onload = () => {\n      this._loadedTypes.push(type)\n      this.onLoaded()\n    }\n\n    if (sprite) options.sprite = sprite\n\n    this[type] = new Howl(options)\n  }\n\n}\n\n/**\n * Absolute Layout Engine\n */\n\nclass AbsoluteLayoutEngine {\n\n  static getDefaultOptions () {\n    return {\n      unit: '%',\n      unitLength: 5\n    }\n  }\n\n  constructor (options) {\n    this.options = Object.assign({}, AbsoluteLayoutEngine.getDefaultOptions(), options)\n  }\n\n  getPositionAt (x, y, isNagative) {\n    const { unit, unitLength } = this.options\n\n    let left = unitLength * x\n    let top = unitLength * y\n\n    if (isNagative) {\n      left *= -1\n      top *= -1\n    }\n\n    return {\n      left: `${left}${unit}`,\n      top: `${top}${unit}`\n    }\n  }\n\n  getPositionTransformAt (...arg) {\n    const offset = this.getPositionAt(...arg)\n\n    return {\n      transform: `translate3d(${offset.left}, ${offset.top}, 0)`\n    }\n  }\n\n}\n\n/**\n * Hero-Focused Camera\n *\n * @DESC: Camera <-> Scene Viewport <-> Scene Layer\n * @DEP: Layout Engine\n */\n\nclass HeroFocusedCamera {\n\n  static getDefaultOptions () {\n    return {\n      layoutEngine: null,\n      heroPoint: {\n        x: 0,\n        y: 0\n      },\n      totalCols: 0,\n      totalRows: 0\n    }\n  }\n\n  constructor (options) {\n    this.options = Object.assign({}, HeroFocusedCamera.getDefaultOptions(), options)\n  }\n\n  getViewportSize () {\n    const { layoutEngine } = this.options\n    const { unitLength, unit } = layoutEngine.options\n\n    if (unit === 'px') {\n      return {\n        viewportCols: window.innerWidth / unitLength,\n        viewportRows: window.innerHeight / unitLength\n      }\n    } else {\n      const aspectRatio = window.innerWidth/window.innerHeight\n      const viewportRows = 100 / unitLength\n      const viewportCols = viewportRows * aspectRatio\n      return {\n        viewportCols,\n        viewportRows\n      }\n    }\n  }\n\n  getViewportOffset () {\n    const {\n      layoutEngine, heroPoint,\n      totalCols, totalRows\n    } = this.options\n\n    const { viewportCols, viewportRows } = this.getViewportSize()\n\n    // X\n    const minX = 0\n    const maxX = totalCols - viewportCols\n    let cameraX = heroPoint.x - (viewportCols / 2)\n    cameraX = Math.min(cameraX, maxX)\n    cameraX = Math.max(cameraX, minX)\n\n    // Y\n    const minY = 0\n    const maxY = totalRows - viewportRows\n    let cameraY = heroPoint.y - (viewportRows / 2)\n    cameraY = Math.min(cameraY, maxY)\n    cameraY = Math.max(cameraY, minY)\n\n    return layoutEngine.getPositionTransformAt(cameraX, cameraY, true)\n  }\n\n  getSceneLayerSize () {\n    const { layoutEngine, totalCols, totalRows } = this.options\n    const { unitLength, unit } = layoutEngine.options\n\n    return {\n      width: `${totalCols * unitLength}${unit}`,\n      height: `${totalRows * unitLength}${unit}`\n    }\n  }\n\n}\n\n/* ==== Mixin ==== */\n\n/**\n * Mixin with Component\n *\n * @TODO: Separate some mixins into files when supporting ES6 Modules\n */\n\nconst mixinWithComponent = (...mixins) => {\n  // MixedComponent Class\n  class MixedComponent {\n\n    constructor () {\n      MixedComponent.mixinConstructors.map(\n        f => f.call(this)\n      )\n    }\n\n  }\n\n  // Static props\n  MixedComponent.mixinConstructors = []\n\n  for(let mixin of mixins) {\n    // @TODO: Would need to handle mixin collisions...\n\n    // Collect constructor of mixin\n    if (typeof mixin._constructor === 'function') {\n      MixedComponent.mixinConstructors.push(\n        mixin._constructor\n      )\n      delete mixin._constructor\n    }\n\n    // Mount functions to MixedComponent.prototype\n    for(let name of Object.keys(mixin)) {\n      MixedComponent.prototype[name] = mixin[name]\n    }\n  }\n\n  return MixedComponent\n}\n\n/**\n * VNode Mixin\n */\n\nconst vnodeMixin = Object.assign({}, window.maquette, {\n\n  _constructor: function () {\n    this._subClasses = {}\n    this._projector = this.createProjector({})\n    this.hc = this.hc.bind(this) // @FIXME: Integrate into `h`\n  },\n\n  hc: function (ComponentClass, props, children) {\n    if (typeof ComponentClass !== 'function') {\n      throw new Error('The first argument of `hc` should be a Component Class')\n    }\n\n    let component = null\n    const componentName = ComponentClass.name\n\n    if (this._subClasses[componentName]) {\n      component = this._subClasses[componentName]\n      component.updateProps(props)\n    } else {\n      component = new ComponentClass(props, children)\n      this._subClasses[componentName] = component\n    }\n\n    if (typeof component.render !== 'function') {\n      throw new Error(`No render function found in Component ${ComponentClass.name}`)\n    }\n\n    return component.render()\n  },\n\n  mount: function ($container, renderFunction = this.render.bind(this)) {\n    this._projector.append($container, renderFunction)\n  },\n\n  update: function (props) {\n    this.updateProps(props)\n    this._projector.scheduleRender()\n  },\n\n  resume: function () {\n    this._projector.resume()\n  },\n\n  stop: function () {\n    this._projector.stop()\n  }\n\n})\n\n/**\n * Style Mixin\n */\n\n// @Hack: Prevent duplicate styles\nconst _insertedCss = {}\n\nconst _styleVariables = {\n  // Colors\n  svPrimary: '#f3904e',\n  svSecond: '#a6a6a6',\n  svBackground: '#EEEEEE',\n  svMask: 'rgba(245, 245, 245, 0.8)',\n  svCard: 'rgba(255, 255, 255, 0.95)',\n\n  // ZIndex\n  svZIndexScene: 23,\n  svZIndexHud: 233,\n  svZIndexPanel: 2333,\n  svZIndexModal: 23333,\n\n  zPlaceholder: '-_-'\n}\n\nconst styleMixin = Object.assign({ csjs: window.csjs }, {\n  // @TODO: Define variables & utils\n\n  _constructor: function () {\n    if (!this.style) return\n\n    // Register global variables\n    this.sv = _styleVariables\n\n    // Get the classNames from the styles\n    const styles = this.style()\n    const _s = {}\n    Object.keys(styles).map(styleName => _s[styleName] = styles[styleName].classNames)\n\n    // Mount the styles object & the util function\n    this.s  = _s\n    this.sc = (...arg) => {\n      const classnames = this.csjs.deps.classNames(arg).split(' ')\n      const classnamesObj = {}\n      classnames.map(classname => classnamesObj[classname] = true)\n      return classnamesObj\n    }\n\n    // Inject the static string of CSS\n    const constructorName = this.constructor.name\n    if (_insertedCss[constructorName]) {\n      return null\n    } else {\n      _insertedCss[constructorName] = true\n    }\n    const staticCss = this.csjs.getCss(styles)\n    this.csjs.deps.insertCss(staticCss)\n  }\n\n})\n\n/* ==== View ==== */\n\n/**\n * Base View\n *\n * @TODO: Think of a elegent way to combine tree-based structure and decoration (mixin-based inheritance)\n * @TODO: Beyond DOM-based view, make a magic to includes style, texture, sound, event and more info mixins\n */\n\nclass BaseView extends mixinWithComponent(\n  vnodeMixin,\n  styleMixin\n) {\n\n  static getDefaultProps () {\n    return {\n      canAutoRender: false\n    }\n  }\n\n  constructor (props, children = []) {\n    super()\n\n    this.props = Object.assign({}, BaseView.getDefaultProps(), props)\n    this.children = children\n\n    if (this.props.canAutoRender) this.render()\n  }\n\n  updateProps (props) {\n    this.props = props\n  }\n\n  render () {\n    const { h, children } = this\n\n    return h('div', 'Default render function, please override me', children)\n  }\n\n  destory () {\n    // @TODO\n  }\n\n}\n\n/* ==== Bottom Views ==== */\n// @TODO: Add more common UI views\n\n/**\n * Modal View\n */\n\nclass ModalView extends BaseView {\n\n  style () {\n    const {\n      svPrimary,\n      svZIndexModal,\n      svCard\n    } = this.sv\n\n    return this.csjs`\n\n      .modalView {\n        position: fixed;\n        z-index: ${svZIndexModal};\n        display: flex;\n        justify-content: center;\n        width: 100%;\n        height: 100vh;\n      }\n\n      .modalMask {\n        position: absolute;\n        z-index: -1;\n        width: 100%;\n        height: 100vh;\n        background: rgba(245, 245, 245, 0.95);\n        cursor: pointer;\n      }\n\n      .modalDialog {\n        position: absolute;\n        display: flex;\n        flex-direction: column;\n        width: 65%;\n        max-width: 700px;\n        min-width: 300px;\n        padding: 25px;\n        margin: 10vh 0;\n        max-height: 80vh;\n        background: hsla(0, 0%, 100%, .36);\n        border: 2px solid currentColor;\n        border-radius: 4px;\n        box-shadow: 1px 2px 5px rgba(0, 0, 0, .15);\n        overflow-y: auto;\n      }\n\n      .modalHeader {\n        position: relative;\n        padding-bottom: 17px;\n        margin-top: 5px;\n        margin-bottom: 20px;\n        border-bottom: 2px solid currentColor;\n      }\n\n      .modalTitle {\n        font-size: 20px;\n      }\n\n      .modalClose {\n        position: absolute;\n        right: -2px;\n        top: 2px;\n        width: 24px;\n        height: 24px;\n        font-size: 20px;\n        cursor: pointer;\n      }\n\n      .modalClose:before, .modalClose:after {\n        content: ' ';\n        position: absolute;\n        left: 12px;\n        height: 24px;\n        width: 2px;\n        background-color: currentColor;\n        border-radius: 2px;\n      }\n\n      .modalClose:before {\n        transform: rotate(45deg);\n      }\n\n      .modalClose:after {\n        transform: rotate(-45deg);\n      }\n\n      .modalClose:hover {\n        color: ${svPrimary};\n      }\n\n      .modalBody {\n        display: flex;\n        width: 100%;\n        overflow: hidden;\n      }\n\n      .modalBody > * {\n        flex: 1;\n        overflow-y: auto;\n        padding-bottom: 5px;\n      }\n\n    `\n  }\n\n  render () {\n    const { h, s, sc, children } = this\n\n    return h('div', { classes: sc(s.modalView), key: s.modalView }, [\n      h('div', { classes: sc(s.modalDialog) }, [\n        this.renderHeader(),\n        h('div', { classes: sc(s.modalBody) }, children)\n      ]),\n      h('div', {\n        classes: sc(s.modalMask),\n        onclick: this.handleCloseClick,\n        bind: this\n      })\n    ])\n  }\n\n  renderHeader () {\n    const { h, s, sc } = this\n    const { title } = this.props\n\n    return h('div', { classes: sc(s.modalHeader) }, [\n      this.renderTitle(),\n      h('div', {\n        classes: sc(s.modalClose),\n        onclick: this.handleCloseClick,\n        bind: this\n      })\n    ])\n  }\n\n  renderTitle () {\n    const { h, s, sc } = this\n    const { title } = this.props\n\n    if (!title) {\n      return null\n    }\n\n    return h('div', { classes: sc(s.modalTitle) }, title)\n  }\n\n  handleCloseClick () {\n    const { keyboardShortcuts } = this.props\n    const { simulateKeydown } = utils\n\n    // @Hack: Simulate keydown on click\n    const keyName = keyboardShortcuts.togglePopup.split('|')[0]\n    simulateKeydown(keyName)\n  }\n\n}\n\n/* ==== Top Views ==== */\n\n/**\n * KBC View - Keyboard Controls\n */\n\nclass KBCView extends BaseView {\n\n  style () {\n    return this.csjs`\n\n      .kbcView {\n\n      }\n\n      .shortcutItem {\n        display: flex;\n        align-items: center;\n      }\n\n      .shortcutItem + .shortcutItem {\n        margin-top: 20px;\n      }\n\n      .shortcutKey {\n        min-width: 42px;\n        height: 42px;\n        padding: 0 10px;\n        margin: 0px 4px;\n        background: #fff;\n        border-radius: 4px;\n        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.1);\n        font: 18px/42px Helvetica, serif;\n        text-transform: capitalize;\n        text-align: center;\n        color: #666;\n      }\n\n      .shortcutAction {\n        margin-left: 20px;\n        font-size: 18px;\n        text-transform: capitalize;\n      }\n\n    `\n  }\n\n  render () {\n    const { h, s, sc } = this\n    const { keyboardShortcuts } = this.props\n\n    const keyboardShortcutsMap = Object.keys(keyboardShortcuts)\n\n    return h('div', { classes: sc(s.kbcView) }, keyboardShortcutsMap.map(action => {\n      return h('div', { classes: sc(s.shortcutItem) }, [\n        h('div', { classes: sc(s.shortcutKey), innerHTML: this.formatKeyAndAction(keyboardShortcuts[action]) } ),\n        h('div', { classes: sc(s.shortcutAction), innerHTML: this.formatKeyAndAction(action) })\n      ])\n    }))\n  }\n\n  decamelize (str, sep = '-') {\n    return str\n      .replace(/([a-z\\d])([A-Z])/g, '$1' + sep + '$2')\n      .replace(/([A-Z]+)([A-Z][a-z\\d]+)/g, '$1' + sep + '$2')\n      .toLowerCase()\n  }\n\n  formatKeyAndAction (input) {\n    let output = input\n\n    const textToSymbol = {\n      leftArrow: '←',\n      rightArrow: '→',\n      upArrow: '↑',\n      downArrow: '↓'\n    }\n\n    for (let text in textToSymbol) {\n      output = output.replace(text, textToSymbol[text])\n    }\n\n    output = this\n      .decamelize(output, ' ')\n      .split('|').join(' &nbsp;/&nbsp; ')\n\n    return output\n  }\n\n}\n\n/**\n * HUD View\n */\n\nclass HUDView extends BaseView {\n\n  style () {\n    const {\n     svZIndexHud\n    } = this.sv\n\n    return this.csjs`\n\n      .hudView {\n        position: absolute;\n        z-index: ${svZIndexHud};\n      }\n\n    `\n  }\n\n  render () {\n    const { h, s, sc } = this\n\n    return h('div', { classes: sc(s.hudView) },  [\n      this.renderMap()\n    ])\n  }\n\n  renderMap () {\n    const { h } = this\n    const { display } = this.props\n\n    if (!display.map) {\n      return null\n    }\n\n    return h('div', 'Map')\n  }\n\n}\n\n/**\n * Panel View\n */\nclass PanelView extends BaseView {\n\n  style () {\n    const {\n      svPrimary,\n      svMask,\n      svZIndexPanel\n    } = this.sv\n\n    return this.csjs`\n\n      .panelWrap {\n        position: fixed;\n        z-index: ${svZIndexPanel};\n        display: flex;\n        justify-content: center;\n        z-index: 10010;\n        width: 100%;\n        height: 100vh;\n        padding-top: 20vh;\n        background: ${svMask};\n      }\n\n      .panelBody {\n        width: 80%;\n        max-width: 400px;\n        text-align: center;\n      }\n\n      .panelTitle {\n        font-size: 24px;\n        margin-bottom: 48px;\n      }\n\n      .panelList {\n        /* overflow-y: auto; */\n      }\n\n      .panelButton {\n        padding: 7px 16px;\n        border: 2px solid currentColor;\n        border-radius: 20px;\n        cursor: pointer;\n        transition: background 218ms;\n      }\n\n      .panelButton:hover,\n      .panelButton.isActive {\n        background: rgba(0, 0, 0, 0.1);\n      }\n\n      .panelButton + .panelButton {\n        margin-top: 24px;\n      }\n\n      .wonBlessings {\n        line-height: 1.6;\n        padding: 14px;\n        margin-top: -22px;\n        margin-bottom: 28px;\n        background: rgba(255, 255, 255, 0.65);\n        border-radius: 25px;\n      }\n\n      .wonBlessings em {\n        margin-right: 2px;\n        color: ${svPrimary}\n      }\n    `\n  }\n\n  render () {\n    const { status, ui } = this.props\n\n    if (!ui.panel) return null\n\n    switch (status) {\n      case 'stopped':\n        return this.renderStartPanel()\n      case 'paused':\n        return this.renderPausedPanel()\n      case 'won':\n        return this.renderWonPanel()\n      default:\n       return null\n    }\n  }\n\n  renderPanelWrap (children) {\n    const { h, s, sc } = this\n\n    return h('div', { classes: sc(s.panelWrap), key: s.panelWrap }, [\n      h('div', { classes: sc(s.panelBody) }, [\n        h('div', { classes: sc(s.panelTitle) }, GAME_NAME),\n        h('div', { classes: sc(s.panelList) }, children)\n      ])\n    ])\n  }\n\n  renderStartPanel () {\n    const { h, s, sc } = this\n    const { ui } = this.props\n    const { panelActions } = ui\n\n    const actionTexts = [\n      'Start Game',\n      'Keyboard Controls',\n      'Give Feedback'\n    ]\n\n    return this.renderPanelWrap(\n      panelActions.map((action, index) => {\n        return this.renderPanelButton(action, actionTexts[index])\n      })\n    )\n  }\n\n  renderPausedPanel () {\n    const { h, s, sc } = this\n    const { ui } = this.props\n    const { panelActions } = ui\n\n    const actionTexts = [\n      'Resume Game',\n      'Keyboard Controls',\n      'Return to Begin'\n    ]\n\n    return this.renderPanelWrap(\n      panelActions.map((action, index) => {\n        return this.renderPanelButton(action, actionTexts[index])\n      })\n    )\n  }\n\n  renderWonPanel () {\n    const { h, s, sc } = this\n    const { player, display, ui } = this.props\n    const { panelActions } = ui\n\n    const stepsTaken = player.movedSteps\n    let secondsTaken = new Date(display.endTime).getTime() - new Date(display.startTime).getTime()\n    secondsTaken = Math.ceil(secondsTaken / 1000)\n\n    const actionTexts = [\n      'Return to Begin'\n    ]\n\n    const blessings = h('div', {\n      classes: sc(s.wonBlessings),\n      innerHTML: `Congratulations! You won the game.\n        <br/>Time taken is <em>${secondsTaken}</em> seconds with <em>${stepsTaken}</em> steps.`\n    })\n\n    const bottons = panelActions.map((action, index) => {\n      return this.renderPanelButton(action, actionTexts[index])\n    })\n\n    return this.renderPanelWrap(\n      [blessings].concat(bottons)\n    )\n  }\n\n  renderPanelButton (action, text) {\n    const { h, s, sc } = this\n    const { ui } = this.props\n\n    return h('div', {\n      classes: { [s.panelButton]: true, [s.isActive]: ui.onSelectAction === action },\n      dataAction: action,\n      onmouseover: this.handlePanelButtonHover,\n      onclick: this.handlePanelButtonClick,\n      bind: this\n    }, text)\n  }\n\n  handlePanelButtonHover (e) {\n    const { dispatch } = store\n    const { switchCurrentlySelectedAction } = actionCreators\n\n    const $target = e.currentTarget\n    const actionName = $target.getAttribute('dataAction')\n\n    dispatch(switchCurrentlySelectedAction(actionName))\n  }\n\n  handlePanelButtonClick () {\n    const { keyboardShortcuts } = this.props\n    const { simulateKeydown } = utils\n\n    // @Hack: Simulate keydown on click\n    simulateKeydown(keyboardShortcuts.select)\n  }\n\n}\n\n/**\n * Scene View\n */\nclass SceneView extends BaseView {\n\n  style () {\n    const {\n      svZIndexScene\n    } = this.sv\n\n    const svTextCellSize = 40 // 5\n    const svTextCellUnit = 'px' // vh\n\n    this.lsv = {\n      svTextCellSize,\n      svTextCellUnit\n    }\n\n    return this.csjs`\n\n      /* Common */\n      .sceneWrap {\n        position: absolute;\n        z-index: ${svZIndexScene};\n        width: 100%;\n      }\n\n      .scene {\n        position: absolute;\n        width: 100%;\n        height: 100vh;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        transition: all 318ms;\n      }\n\n      .sceneLayer {\n        max-width: 100%;\n        max-height: 100vh;\n      }\n\n      .sceneLayer.sceneEntities {\n        position: absolute;\n        z-index: 2;\n      }\n\n      .sceneLayer.sceneMap {\n        position: absolute;\n        z-index: 1;\n        display: flex;\n        flex-direction: row;\n      }\n\n      .commonCol {\n        width: ${svTextCellSize}${svTextCellUnit};\n      }\n\n      .commonCell {\n        flex: 1 0 auto;\n      }\n\n      .commonEntity {\n        position: absolute;\n      }\n\n\n      /* Text */\n      .textScene {\n\n      }\n\n      .textCell {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: ${svTextCellSize}${svTextCellUnit};\n        height: ${svTextCellSize}${svTextCellUnit};\n        background: #ffffff;\n        transition: all 318ms 268ms;\n      }\n\n      .textCell.typeRoad {\n        color: #cccccc;\n      }\n\n      .textCell.typeWall {\n        color: #929292; /* #a6a6a6 */\n      }\n\n      .textCell.typeStart {\n        color: currentColor !important;\n        background: #f3e2e9 !important;\n      }\n\n      .textCell.typeEnd {\n        color: currentColor !important;\n        background: #e2e9f3 !important;\n      }\n\n      .textCell.isSolution {\n        background: #e9f3e2;\n      }\n\n      .textCell.isWalked {\n        color: #e74c3c;\n      }\n\n      .textEntity.typePlayer {\n        background: rgba(255, 255, 255, .7);\n        transition: all 318ms;\n      }\n\n      /* Graphic */\n      .graphicScene {\n\n      }\n\n    `\n  }\n\n  render () {\n    const { display } = this.props\n    const { sceneType } = display\n    const { svTextCellSize, svTextCellUnit } = this.lsv\n\n    this.layoutEngine = new AbsoluteLayoutEngine({\n      unit: svTextCellUnit,\n      unitLength: svTextCellSize\n    })\n\n    switch (sceneType) {\n      case 'text':\n        return this.renderTextScene()\n      case 'graphic':\n        return this.renderGraphicScene()\n      default:\n       return null\n    }\n  }\n\n  renderSceneWrap (children) {\n    const { h, s, sc } = this\n    const { cols, rows } = this.props.place\n\n    return h('div', { classes: sc(s.sceneWrap), key: s.sceneWrap }, children)\n  }\n\n  renderTextScene () {\n    const { h, s, sc } = this\n    const { layoutEngine } = this\n    const { unitLength, unit } = this.layoutEngine.options\n    const { map, cols, rows } = this.props.place\n\n    const heroPoint = this.getCameraTraceTarget()\n    const camera = new HeroFocusedCamera({\n      layoutEngine,\n      heroPoint,\n      totalCols: cols,\n      totalRows: rows\n    })\n\n    const viewportOffset = camera.getViewportOffset()\n    const sceneLayerSize = camera.getSceneLayerSize()\n\n    return this.renderSceneWrap([\n      h('div', { classes: sc(s.scene, s.textScene), styles: viewportOffset, key: s.textScene }, [\n        h('div', { classes: sc(s.sceneLayer, s.sceneEntities), styles: sceneLayerSize }, [\n          this.renderTextScenePlayer()\n        ]),\n        h('div', { classes: sc(s.sceneLayer, s.sceneMap), styles: sceneLayerSize, key: s.sceneMap }, map.map((col, index) => {\n          return h('div', { classes: sc(s.commonCol), key: `col-${index}` }, [\n            col.map(cell => this.renderTextCell(cell))\n          ])\n        }))\n      ])\n    ])\n  }\n\n  getCameraTraceTarget () {\n    const { display, player, place } = this.props\n    const { grid } = place\n    const { cameraTraceTarget } = display\n\n    switch (cameraTraceTarget) {\n      case 'player': return player\n      default: return grid.getCellAt(0, 0)\n    }\n  }\n\n  renderTextScenePlayer () {\n    const { h, s, sc } = this\n    const { layoutEngine } = this\n    const { status, player } = this.props\n\n    const playerOffset = layoutEngine.getPositionTransformAt(player.x, player.y)\n\n    if (status === 'stopped') {\n      return null\n    }\n\n    return h('div', {\n      classes: sc(s.textCell, s.commonEntity, s.textEntity, s.typePlayer),\n      styles: playerOffset }\n    , '@')\n  }\n\n  renderTextCell (cell) {\n    const { capitalize, randomChoice } = utils\n    const { h, s, sc } = this\n    const { display, place } = this.props\n    const { types } = place.grid.options\n\n    const wallSymbols = ['#', '■', '/', '❄', '⚑', '◎']\n\n    const roadSymbols = ['.∵', '.∵。', '。.']\n\n    const typeSymbolsMap = {\n      'start': 'S',\n      'end': 'E',\n      'wall': wallSymbols[3], // randomChoice(wallSymbols)\n      'road': roadSymbols[0] // randomChoice(roadSymbols)\n    }\n\n    const topClasses = sc(\n      s.commonCell,\n      s.textCell\n    )\n\n    // @FIXME: Break the second rule http://maquettejs.org/docs/rules.html\n    for (let type in types) {\n      topClasses[s[`type${capitalize(type)}`]] = cell.type === type\n    }\n\n    topClasses[s.isWalked] = cell.isWalked\n    topClasses[s.isSolution] = display.solution && cell.isSolution\n\n    return h('div', { classes: topClasses, key: `cell-${cell.x}-${cell.y}` },\n      typeSymbolsMap[cell.type]\n    )\n  }\n\n  renderGraphicScene () {\n    const { h, s, sc } = this\n\n    return this.renderSceneWrap([\n      h('div', {\n        classes: sc(s.scene, s.graphicScene),\n        key: s.graphicScene\n      }, 'Graphic scene is WIP, please press T to switch to text scene. (¬_¬)')\n    ])\n  }\n\n}\n\n/**\n * Game View\n */\nclass GameView extends BaseView {\n\n  style () {\n    return this.csjs `\n\n      .game {\n        position: relative;\n      }\n\n    `\n  }\n\n  render () {\n    const { h, hc, s, sc } = this\n\n    return h('div', { classes: sc(s.game) }, [\n      this.renderModal(),\n      this.renderPanel(),\n      this.renderHUD(),\n      this.renderScene()\n    ])\n  }\n\n  renderModal () {\n    const { h, hc } = this\n    const { ui, keyboardShortcuts } = this.props\n    const { modal } = ui\n\n    let title = null\n    let content = null\n\n    if (!modal) {\n      return null\n    } else if (modal === 'keyboardControls') {\n      title = 'Keyboard Controls'\n      content = hc(KBCView, { keyboardShortcuts })\n    }\n\n    return hc(ModalView, { keyboardShortcuts, title }, [content])\n  }\n\n  renderPanel () {\n    const { hc } = this\n    const { status, player, display, ui, keyboardShortcuts } = this.props\n\n    return hc(PanelView, { status, player, display, ui, keyboardShortcuts })\n  }\n\n  renderScene () {\n    const { hc } = this\n    const { status, display, player, place } = this.props\n\n    if (status === 'stopped' && !place) {\n      return null\n    }\n\n    return hc(SceneView, { status, display, player, place })\n  }\n\n  renderHUD () {\n    const { hc } = this\n    const { status, ui, display } = this.props\n\n    if (status === 'stopped') {\n      return null\n    }\n\n    return hc(HUDView, { ui, display })\n  }\n\n}\n\n\n/* ==== Game Main ==== */\n\n// Sound\nconst soundManager = new SoundManager()\n\n// Store instance\nconst store = new Store(\n  middlewares.logger,\n  middlewares.linked,\n  middlewares.soundSpawn(soundManager)\n)\n\n// @TODO: MainLoop && Animation\nclass Game {\n\n  static getDefaultProps () {\n    return {\n      renderMode: 'dom', // 'dom' | 'canvas'\n      keyboardShortcuts: {\n        // HUD\n        select: 'enter',\n        togglePopup: 'escape|p',\n        // openMap: 'm',\n        getSolution: 'h',\n\n        // Sence Type\n        switchToTextScene: 't',\n        switchToGraphicScene: 'g',\n\n        // Direction\n        moveLeft: 'leftArrow|a',\n        moveRight: 'rightArrow|d',\n        moveUp: 'upArrow|w',\n        moveDown: 'downArrow|s'\n\n        // Actions\n        // jump: 'spacebar|j',\n        // attack: 'k'\n      }\n    }\n  }\n\n  constructor (props) {\n    // Data\n    this.props = Object.assign({}, Game.getDefaultProps(), props) // Immutable = state\n    this.state = store.getState() // Update by dispatching action\n    this.places = [] // Local data\n    // DOMs\n    this.$container = document.querySelector('.gameContainer')\n    this.$body      = document.querySelector('body')\n    // Events\n    this.keyboardListener = null\n    this._eventListeners()\n    // Mount\n    this._render(this.state)\n    this._genPlaces()\n    // @DEV\n    soundManager.bgm.mute(true)\n    // soundManager.effects.mute(true)\n    // this.start()\n  }\n\n  _eventListeners () {\n    // User inputs\n    this.keyboardListener = new KeyboardListener({\n      handlePress: this._handlePlayerKeydown.bind(this)\n    })\n\n    // Window\n    window.addEventListener('resize', this._handleResizeWindow.bind(this), false)\n\n    // Store\n    store.subscribe(this._update.bind(this))\n\n    // @MAYBE: Router, Socket...\n    return this\n  }\n\n  _handlePlayerKeydown (e) {\n    const { keymap } = utils\n    const { keyboardShortcuts } = this.props\n    const { status } = this.state\n\n    const inputKeyName = keymap(e.keyCode)\n    const persistingControls = ['togglePopup', 'select', 'moveUp', 'moveDown']\n    const persistingKeys = persistingControls\n      .map(control => keyboardShortcuts[control])\n      .join('|')\n      .split('|')\n\n    const disableConditions = [\n      () => inputKeyName === undefined,\n      () => status !== 'started' && persistingKeys.indexOf(inputKeyName) === -1\n    ]\n\n    if (disableConditions.some(c => c())) return\n\n    this._runActionByMatchKey(inputKeyName)\n  }\n\n  _runActionByMatchKey (key) {\n    const { keyboardShortcuts } = this.props\n\n    for (let action in keyboardShortcuts) {\n      const pattern = keyboardShortcuts[action]\n      const isMatched = new RegExp(`^(${pattern})$`, 'ig').test(key)\n      // @TODO: Move event handlers into each view components, especially for UI\n      if (isMatched) this[`handle${utils.capitalize(action)}`]()\n    }\n  }\n\n  _handleResizeWindow () {\n    store.dispatch(actionCreators.resizeWindow())\n  }\n\n  _genPlaces () {\n    const { places } = this\n\n    const placeNames = [\n      'Brekka',\n      // 'Prestbakki',\n      'Tungufell'\n    ]\n\n    const baseCols  = 67\n    const baseRows  = 57\n    const sizeDelta = 21\n\n    placeNames.map((name, index) => {\n      const cols = baseCols + (index * sizeDelta)\n      const rows = baseRows + (index * sizeDelta)\n\n      const grid = new MazeGrid({ cols, rows, name })\n      const place = {\n        index,\n        name,\n        cols,\n        rows,\n        grid,\n        map: grid.getMatrix()\n      }\n\n      places.push(place)\n      store.dispatch(actionCreators.addPlace({}))\n    })\n  }\n\n  _update () {\n    this.state = store.getState()\n    const combinedState = this._genCombinedState(this.state)\n    this.renderer.update(combinedState)\n  }\n\n  _genCombinedState (state) {\n    const { keyboardShortcuts } = this.props\n    const place = this.getCurrentPlace()\n\n    return Object.assign({}, state, {\n      keyboardShortcuts,\n      place\n    })\n  }\n\n  _render () {\n    const { renderMode } = this.props\n\n    switch (renderMode) {\n      case 'dom':\n        return this._renderInDOM()\n      case 'canvas':\n        return this._renderInCanvas()\n    }\n  }\n\n  _renderInDOM ()  {\n    const combinedState = this._genCombinedState(this.state)\n\n    this.renderer = new GameView(combinedState)\n    this.renderer.mount(this.$container)\n  }\n\n  _renderInCanvas (state) {\n    const combinedState = this._genCombinedState(this.state)\n\n    // @TODO: HTML 2 Canvas\n    // @P.S. Supportting multiple renderers is a complex abstraction, refer to Pixi.js or React\n  }\n\n  _initPlayer () {\n    const place = this.getCurrentPlace()\n    const startCell = place.grid.getStartCell()\n\n    store.dispatch(actionCreators.playerMoveTo(startCell.getPoint()))\n  }\n\n  getCurrentPlace () {\n    const { places } = this\n    const { display } = this.state\n    const { cameraTraceTarget } = display\n\n    const placeIndex = this.state[cameraTraceTarget].placeIndex\n\n    return places[placeIndex]\n  }\n\n  start () {\n    const { display } = this.state\n    const { startTime } = display\n\n    if (!startTime) {\n      store.dispatch(actionCreators.startTime(new Date()))\n      this._initPlayer()\n    }\n\n    store.dispatch(actionCreators.startGame())\n    soundManager.bgm.play()\n  }\n\n  pause () {\n    store.dispatch(actionCreators.pauseGame())\n    soundManager.bgm.pause()\n  }\n\n  resume () {\n    this.start()\n  }\n\n  stop () {\n    this.places = []\n    this._genPlaces()\n    store.dispatch(actionCreators.stopGame())\n\n    soundManager.bgm.pause()\n    soundManager.bgm.seek(0)\n  }\n\n  handleTogglePopup () {\n    const { status, ui } = this.state\n\n    if (ui.modal) {\n      return store.dispatch(actionCreators.updateModal(null))\n    }\n\n    if (status === 'paused') {\n      this.resume()\n    } else if (status === 'started') {\n      this.pause()\n    }\n  }\n\n  handleSelect () {\n    const { status, ui } = this.state\n\n    if (ui.modal) {\n      return store.dispatch(actionCreators.updateModal(null))\n    }\n\n    if (!ui.panel) return\n\n    soundManager.play('effects', 'click')\n\n    switch (ui.onSelectAction) {\n      case 'giveFeedback':\n        return window.open(FEEDBACK_URL)\n      case 'startGame':\n        return this.start()\n      case 'stopGame':\n       return this.stop()\n      default:\n        const action = actionCreators[ui.onSelectAction]\n        if (action) store.dispatch(action())\n    }\n  }\n\n  _handleMovePlayer (dir) {\n    const place = this.getCurrentPlace()\n    const { player } = this.state\n    const { getDX, getDY } = direction\n    const { grid } = place\n\n    const nextPoint = {\n      x: player.x + getDX(dir),\n      y: player.y + getDY(dir)\n    }\n\n    const nextCell = grid.getCellAt(nextPoint.x, nextPoint.y)\n\n    if (!nextCell || !nextCell.walkable) {\n      return null\n    }\n\n    nextCell.walk()\n    store.dispatch(actionCreators.playerMove(dir))\n\n    if (nextCell.type === 'end') {\n      this._handleEndPoint()\n    }\n  }\n\n  _handleEndPoint () {\n    const { places } = this\n    const { player } = this.state\n\n    const nextPlaceIndex = player.placeIndex + 1\n\n    if (nextPlaceIndex >= places.length) {\n      store.dispatch(actionCreators.endTime(new Date()))\n      store.dispatch(actionCreators.winGame())\n    } else {\n      store.dispatch(actionCreators.playerPlaceIndex(nextPlaceIndex))\n      this._initPlayer()\n    }\n\n    soundManager.effects.play('success')\n  }\n\n  handleMoveLeft () {\n    this._handleMovePlayer('W')\n  }\n\n  handleMoveRight () {\n    this._handleMovePlayer('E')\n  }\n\n  handleMoveUp () {\n    const { status, ui } = this.state\n    const { panel, panelActions, onSelectAction, modal } = ui\n\n    if (modal) return\n\n    if (panel) {\n      const currentIndex = panelActions.indexOf(onSelectAction)\n      const nextIndex = currentIndex === 0 ? panelActions.length - 1 : currentIndex - 1\n      const nextAction = panelActions[nextIndex]\n      store.dispatch(actionCreators.switchCurrentlySelectedAction(nextAction))\n    } else if (status === 'started') {\n      this._handleMovePlayer('N')\n    }\n  }\n\n  handleMoveDown () {\n    const { status, ui } = this.state\n    const { panel, panelActions, onSelectAction, modal } = ui\n\n    if (modal) return\n\n    if (panel) {\n      const currentIndex = panelActions.indexOf(onSelectAction)\n      const nextIndex = currentIndex === panelActions.length - 1 ? 0 : currentIndex + 1\n      const nextAction = panelActions[nextIndex]\n      store.dispatch(actionCreators.switchCurrentlySelectedAction(nextAction))\n    } else if (status === 'started') {\n      this._handleMovePlayer('S')\n    }\n  }\n\n  handleOpenMap () {\n    store.dispatch(actionCreators.toggleMap())\n  }\n\n  handleGetSolution () {\n    store.dispatch(actionCreators.toggleSolution())\n  }\n\n  handleSwitchToTextScene () {\n    store.dispatch(actionCreators.switchSenceType('text'))\n  }\n\n  handleSwitchToGraphicScene () {\n    store.dispatch(actionCreators.switchSenceType('graphic'))\n  }\n\n  handleJump () {\n    // @TODO\n  }\n\n  handleAttack () {\n    // @TODO\n  }\n\n}\n\n/* == Init == */\nvoid function init () {\n  const config = { }\n  const game = new Game(config)\n  if (DEBUG) window.game = game\n}()\n\n}()\n"]}