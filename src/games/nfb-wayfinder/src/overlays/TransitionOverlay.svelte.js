/* overlays/TransitionOverlay.svelte generated by Svelte v3.31.0 */
import {
	SvelteComponent,
	add_render_callback,
	attr,
	create_component,
	create_in_transition,
	create_out_transition,
	destroy_component,
	detach,
	element,
	init,
	insert,
	mount_component,
	noop,
	safe_not_equal,
	transition_in,
	transition_out
} from "svelte/internal";

import { fade } from "svelte/transition";
import { onMount, onDestroy } from "svelte";
import { context } from "../alec-svelte";
import * as Tags from "../tags";
import getConfig from "../config";
import AnimatedTextSpan from "../components/AnimatedTextSpan.svelte";
import { fadeInTransition } from "../animations/transitions";

// import GameProgress from "../components/GameProgress.svelte";
// import videoSrc from "../assets/video/transition.mp4";
import LeafVideo from "../components/LeafVideo.svelte";

function create_fragment(ctx) {
	let div;
	let leafvideo;
	let div_intro;
	let div_outro;
	let current;

	leafvideo = new LeafVideo({
			props: {
				fadeInOptions: { delay: 0, duration: 500 },
				fadeOutOptions: { delay: 0, duration: 500 }
			}
		});

	return {
		c() {
			div = element("div");
			create_component(leafvideo.$$.fragment);
			attr(div, "class", "container svelte-xjm3ff");
		},
		m(target, anchor) {
			insert(target, div, anchor);
			mount_component(leafvideo, div, null);
			current = true;
		},
		p: noop,
		i(local) {
			if (current) return;
			transition_in(leafvideo.$$.fragment, local);

			add_render_callback(() => {
				if (div_outro) div_outro.end(1);
				if (!div_intro) div_intro = create_in_transition(div, fadeInTransition, { y: 0, delay: 0, duration: 1000 });
				div_intro.start();
			});

			current = true;
		},
		o(local) {
			transition_out(leafvideo.$$.fragment, local);
			if (div_intro) div_intro.invalidate();
			div_outro = create_out_transition(div, fadeInTransition, { y: 0, delay: 0, duration: 1000 });
			current = false;
		},
		d(detaching) {
			if (detaching) detach(div);
			destroy_component(leafvideo);
			if (detaching && div_outro) div_outro.end();
		}
	};
}

const delay = 0;

function instance($$self) {
	let swapWorldsTimeout;

	// let video;
	onMount(() => {
		// video.play();
		return () => {
			
		}; // if (video) video.pause();
	});

	onMount(() => {
		console.log("mount transition!");

		swapWorldsTimeout = setTimeout(
			() => {
				console.log("do world swap!");
				const e = world.findEntity(Tags.TransitionToNextBiome);

				if (e && !getConfig().demo) {
					e.add(Tags.SafeToSwapBiomes);
				}
			},
			1250
		);
	});

	return [];
}

class TransitionOverlay extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default TransitionOverlay;