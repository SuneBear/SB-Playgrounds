/* overlays/SimpleHintOverlay.svelte generated by Svelte v3.31.0 */
import {
	SvelteComponent,
	add_render_callback,
	append,
	attr,
	create_in_transition,
	create_out_transition,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	space
} from "svelte/internal";

import { fade } from "svelte/transition";
import { onMount, onDestroy } from "svelte";
import iconTouch from "../assets/image/svg/icon-touch.svg";

function create_fragment(ctx) {
	let div2;
	let div1;
	let div0;
	let img;
	let img_src_value;
	let t0;
	let p;
	let div2_intro;
	let div2_outro;
	let current;

	return {
		c() {
			div2 = element("div");
			div1 = element("div");
			div0 = element("div");
			img = element("img");
			t0 = space();
			p = element("p");
			p.textContent = `${/*isMobile*/ ctx[0] ? "tap + hold" : "click + hold"} to explore`;
			if (img.src !== (img_src_value = iconTouch)) attr(img, "src", img_src_value);
			attr(img, "alt", "");
			attr(div0, "class", "image-container svelte-1rmuk9w");
			attr(p, "class", "svelte-1rmuk9w");
			attr(div1, "class", "info svelte-1rmuk9w");
			attr(div2, "class", "container svelte-1rmuk9w");
		},
		m(target, anchor) {
			insert(target, div2, anchor);
			append(div2, div1);
			append(div1, div0);
			append(div0, img);
			append(div1, t0);
			append(div1, p);
			current = true;
		},
		p: noop,
		i(local) {
			if (current) return;

			add_render_callback(() => {
				if (div2_outro) div2_outro.end(1);
				if (!div2_intro) div2_intro = create_in_transition(div2, fade, { delay: 1000, duration: 1500 });
				div2_intro.start();
			});

			current = true;
		},
		o(local) {
			if (div2_intro) div2_intro.invalidate();
			div2_outro = create_out_transition(div2, fade, { duration: 800 });
			current = false;
		},
		d(detaching) {
			if (detaching) detach(div2);
			if (detaching && div2_outro) div2_outro.end();
		}
	};
}

function instance($$self) {
	const isMobile = (/(Android|iOS|iPad|iPod|iPhone)/i).test(navigator.userAgent);
	return [isMobile];
}

class SimpleHintOverlay extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default SimpleHintOverlay;